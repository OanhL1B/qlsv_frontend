{"ast":null,"code":"import { SET_ERRORS } from \"../actionTypes\";\nconst initialState = {};\n\nconst errorReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default errorReducer;","map":{"version":3,"sources":["D:/FE/project/qlsv_frontend/src/redux/reducers/errorReducer.js"],"names":["SET_ERRORS","initialState","errorReducer","state","action","type","payload"],"mappings":"AAAA,SAASA,UAAT,QAA2B,gBAA3B;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,UAAL;AACE,aAAOI,MAAM,CAACE,OAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPD;;AASA,eAAeD,YAAf","sourcesContent":["import { SET_ERRORS } from \"../actionTypes\";\r\n\r\nconst initialState = {};\r\n\r\nconst errorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default errorReducer;\r\n"]},"metadata":{},"sourceType":"module"}