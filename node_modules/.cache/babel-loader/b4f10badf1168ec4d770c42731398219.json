{"ast":null,"code":"var _jsxFileName = \"D:\\\\PTIT\\\\Ky2Nam4\\\\QLSV\\\\frontend\\\\src\\\\components\\\\admin\\\\updatepassword\\\\Body.js\";\nimport React, { useEffect, useState } from \"react\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Spinner from \"../../../utils/Spinner\";\nimport * as classes from \"../../../utils/styles\";\nimport { updatePassword } from \"../../../redux/actions/adminActions\"; // import { adminUpdatePassword } from \"../../../../../redux/actions/adminActions\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = () => {\n  // const [oldPassword, setOldPassword] = useState(\"\");\n  // const [newPassword, setNewPassword] = useState(\"\");\n  // const [confirmPassword, setConfirmPassword] = useState(\"\");\n  // const [showPassword, setShowPassword] = useState(false);\n  // const [error, setError] = useState({});\n  // const [loading, setLoading] = useState(false);\n  // const store = useSelector((state) => state);\n  // const dispatch = useDispatch();\n  // const navigate = useNavigate();\n  // const user = JSON.parse(localStorage.getItem(\"adminUser\"));\n  // console.log(\"user\", user?.retObj?.userDetails?.id);\n  // // console.log(\"user\", user);\n  // useEffect(() => {\n  //   if (Object.keys(store.errors).length !== 0) {\n  //     setError(store.errors);\n  //     setLoading(false);\n  //   }\n  // }, [store.errors]);\n  // const passwordsMatch = () => {\n  //   return newPassword === confirmPassword;\n  // };\n  // const update = (e) => {\n  //   e.preventDefault();\n  //   setLoading(true);\n  //   if (!passwordsMatch()) {\n  //     console.log(\"vô đây\");\n  //     alert(\"Mật khẩu không khớp nhau\");\n  //   } else {\n  //     // Gửi form đi\n  //     dispatch(\n  //       updatePassword({\n  //         id: user?.retObj?.userDetails?.id,\n  //         matKhauCu: oldPassword,\n  //         matKhauMoi: newPassword,\n  //       })\n  //     );\n  //   }\n  // };\n  // useEffect(() => {\n  //   if (store.errors) {\n  //     setLoading(false);\n  //     setNewPassword(\"\");\n  //     setConfirmPassword(\"\");\n  //     setOldPassword(\"\");\n  //   }\n  // }, [store.errors]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this) // <div className=\"flex-[0.8] mt-3\">\n  //   <div className=\"space-y-5\">\n  //     <div className=\"flex items-center space-x-2 text-gray-400\">\n  //       <VisibilityOffIcon />\n  //       <h1>Password</h1>\n  //     </div>\n  //     <div className=\"flex flex-col mr-10 bg-white rounded-xl\">\n  //       <form\n  //         onSubmit={update}\n  //         className=\"flex flex-col items-center my-8 space-y-6\"\n  //       >\n  //         <h1 className=\"text-3xl font-bold text-black\">Update Password</h1>\n  //         <div className=\"space-y-1\">\n  //           <p className=\"text-[#515966] font-bold text-sm\">Old Password</p>\n  //           <div className=\"flex items-center w-full px-3 space-x-3 border-2 rounded-lg\">\n  //             <input\n  //               onChange={(e) => setOldPassword(e.target.value)}\n  //               value={oldPassword}\n  //               required\n  //               type={showPassword ? \"text\" : \"password\"}\n  //               className=\"py-2 rounded-lg outline-none placeholder:text-sm\"\n  //               placeholder=\"Old Password\"\n  //             />\n  //             {showPassword ? (\n  //               <VisibilityIcon\n  //                 onClick={() => setShowPassword(!showPassword)}\n  //                 className=\"cursor-pointer\"\n  //               />\n  //             ) : (\n  //               <VisibilityOffIcon\n  //                 onClick={() => setShowPassword(!showPassword)}\n  //                 className=\"cursor-pointer\"\n  //               />\n  //             )}\n  //           </div>\n  //         </div>\n  //         <div className=\"space-y-1\">\n  //           <p className=\"text-[#515966] font-bold text-sm\">New Password</p>\n  //           <div className=\"flex items-center w-full px-3 space-x-3 border-2 rounded-lg\">\n  //             <input\n  //               onChange={(e) => setNewPassword(e.target.value)}\n  //               value={newPassword}\n  //               required\n  //               type={showPassword ? \"text\" : \"password\"}\n  //               className=\"py-2 rounded-lg outline-none placeholder:text-sm\"\n  //               placeholder=\"New Password\"\n  //             />\n  //             {showPassword ? (\n  //               <VisibilityIcon\n  //                 onClick={() => setShowPassword(!showPassword)}\n  //                 className=\"cursor-pointer\"\n  //               />\n  //             ) : (\n  //               <VisibilityOffIcon\n  //                 onClick={() => setShowPassword(!showPassword)}\n  //                 className=\"cursor-pointer\"\n  //               />\n  //             )}\n  //           </div>\n  //         </div>\n  //         <div className=\"space-y-1\">\n  //           <p className=\"text-[#515966] font-bold text-sm\">\n  //             Confirm Password\n  //           </p>\n  //           <div className=\"flex items-center w-full px-3 space-x-3 border-2 rounded-lg\">\n  //             <input\n  //               onChange={(e) => setConfirmPassword(e.target.value)}\n  //               value={confirmPassword}\n  //               required\n  //               type={showPassword ? \"text\" : \"password\"}\n  //               className=\"py-2 rounded-lg outline-none placeholder:text-sm\"\n  //               placeholder=\"Confirm Password\"\n  //             />\n  //             {showPassword ? (\n  //               <VisibilityIcon\n  //                 onClick={() => setShowPassword(!showPassword)}\n  //                 className=\"cursor-pointer\"\n  //               />\n  //             ) : (\n  //               <VisibilityOffIcon\n  //                 onClick={() => setShowPassword(!showPassword)}\n  //                 className=\"cursor-pointer\"\n  //               />\n  //             )}\n  //           </div>\n  //         </div>\n  //         <div className={classes.adminFormButton}>\n  //           <button className={classes.adminFormSubmitButton} type=\"submit\">\n  //             Update\n  //           </button>\n  //           <button\n  //             onClick={() => navigate(\"/\")}\n  //             className={classes.adminFormClearButton}\n  //             type=\"button\"\n  //           >\n  //             Cancel\n  //           </button>\n  //         </div>\n  //         {loading && (\n  //           <Spinner\n  //             message=\"Updating\"\n  //             height={30}\n  //             width={150}\n  //             color=\"#111111\"\n  //             messageColor=\"#blue\"\n  //           />\n  //         )}\n  //         {(error.mismatchError || error.backendError) && (\n  //           <p className=\"text-red-500\">\n  //             {error.mismatchError || error.backendError}\n  //           </p>\n  //         )}\n  //       </form>\n  //     </div>\n  //   </div>\n  // </div>\n  ;\n};\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["D:/PTIT/Ky2Nam4/QLSV/frontend/src/components/admin/updatepassword/Body.js"],"names":["React","useEffect","useState","VisibilityIcon","VisibilityOffIcon","useDispatch","useSelector","useNavigate","Spinner","classes","updatePassword","Body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAASC,cAAT,QAA+B,qCAA/B,C,CACA;;;;AACA,MAAMC,IAAI,GAAG,MAAM;AACjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,stHF;AAwHD,CA9KD;;KAAMA,I;AAgLN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Spinner from \"../../../utils/Spinner\";\r\nimport * as classes from \"../../../utils/styles\";\r\nimport { updatePassword } from \"../../../redux/actions/adminActions\";\r\n// import { adminUpdatePassword } from \"../../../../../redux/actions/adminActions\";\r\nconst Body = () => {\r\n  // const [oldPassword, setOldPassword] = useState(\"\");\r\n\r\n  // const [newPassword, setNewPassword] = useState(\"\");\r\n  // const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  // const [showPassword, setShowPassword] = useState(false);\r\n  // const [error, setError] = useState({});\r\n  // const [loading, setLoading] = useState(false);\r\n  // const store = useSelector((state) => state);\r\n  // const dispatch = useDispatch();\r\n  // const navigate = useNavigate();\r\n  // const user = JSON.parse(localStorage.getItem(\"adminUser\"));\r\n  // console.log(\"user\", user?.retObj?.userDetails?.id);\r\n  // // console.log(\"user\", user);\r\n\r\n  // useEffect(() => {\r\n  //   if (Object.keys(store.errors).length !== 0) {\r\n  //     setError(store.errors);\r\n  //     setLoading(false);\r\n  //   }\r\n  // }, [store.errors]);\r\n\r\n  // const passwordsMatch = () => {\r\n  //   return newPassword === confirmPassword;\r\n  // };\r\n  // const update = (e) => {\r\n  //   e.preventDefault();\r\n\r\n  //   setLoading(true);\r\n  //   if (!passwordsMatch()) {\r\n  //     console.log(\"vô đây\");\r\n  //     alert(\"Mật khẩu không khớp nhau\");\r\n  //   } else {\r\n  //     // Gửi form đi\r\n\r\n  //     dispatch(\r\n  //       updatePassword({\r\n  //         id: user?.retObj?.userDetails?.id,\r\n  //         matKhauCu: oldPassword,\r\n  //         matKhauMoi: newPassword,\r\n  //       })\r\n  //     );\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   if (store.errors) {\r\n  //     setLoading(false);\r\n  //     setNewPassword(\"\");\r\n  //     setConfirmPassword(\"\");\r\n  //     setOldPassword(\"\");\r\n  //   }\r\n  // }, [store.errors]);\r\n\r\n  return (\r\n    <div></div>\r\n    // <div className=\"flex-[0.8] mt-3\">\r\n    //   <div className=\"space-y-5\">\r\n    //     <div className=\"flex items-center space-x-2 text-gray-400\">\r\n    //       <VisibilityOffIcon />\r\n    //       <h1>Password</h1>\r\n    //     </div>\r\n\r\n    //     <div className=\"flex flex-col mr-10 bg-white rounded-xl\">\r\n    //       <form\r\n    //         onSubmit={update}\r\n    //         className=\"flex flex-col items-center my-8 space-y-6\"\r\n    //       >\r\n    //         <h1 className=\"text-3xl font-bold text-black\">Update Password</h1>\r\n    //         <div className=\"space-y-1\">\r\n    //           <p className=\"text-[#515966] font-bold text-sm\">Old Password</p>\r\n    //           <div className=\"flex items-center w-full px-3 space-x-3 border-2 rounded-lg\">\r\n    //             <input\r\n    //               onChange={(e) => setOldPassword(e.target.value)}\r\n    //               value={oldPassword}\r\n    //               required\r\n    //               type={showPassword ? \"text\" : \"password\"}\r\n    //               className=\"py-2 rounded-lg outline-none placeholder:text-sm\"\r\n    //               placeholder=\"Old Password\"\r\n    //             />\r\n    //             {showPassword ? (\r\n    //               <VisibilityIcon\r\n    //                 onClick={() => setShowPassword(!showPassword)}\r\n    //                 className=\"cursor-pointer\"\r\n    //               />\r\n    //             ) : (\r\n    //               <VisibilityOffIcon\r\n    //                 onClick={() => setShowPassword(!showPassword)}\r\n    //                 className=\"cursor-pointer\"\r\n    //               />\r\n    //             )}\r\n    //           </div>\r\n    //         </div>\r\n    //         <div className=\"space-y-1\">\r\n    //           <p className=\"text-[#515966] font-bold text-sm\">New Password</p>\r\n    //           <div className=\"flex items-center w-full px-3 space-x-3 border-2 rounded-lg\">\r\n    //             <input\r\n    //               onChange={(e) => setNewPassword(e.target.value)}\r\n    //               value={newPassword}\r\n    //               required\r\n    //               type={showPassword ? \"text\" : \"password\"}\r\n    //               className=\"py-2 rounded-lg outline-none placeholder:text-sm\"\r\n    //               placeholder=\"New Password\"\r\n    //             />\r\n    //             {showPassword ? (\r\n    //               <VisibilityIcon\r\n    //                 onClick={() => setShowPassword(!showPassword)}\r\n    //                 className=\"cursor-pointer\"\r\n    //               />\r\n    //             ) : (\r\n    //               <VisibilityOffIcon\r\n    //                 onClick={() => setShowPassword(!showPassword)}\r\n    //                 className=\"cursor-pointer\"\r\n    //               />\r\n    //             )}\r\n    //           </div>\r\n    //         </div>\r\n    //         <div className=\"space-y-1\">\r\n    //           <p className=\"text-[#515966] font-bold text-sm\">\r\n    //             Confirm Password\r\n    //           </p>\r\n    //           <div className=\"flex items-center w-full px-3 space-x-3 border-2 rounded-lg\">\r\n    //             <input\r\n    //               onChange={(e) => setConfirmPassword(e.target.value)}\r\n    //               value={confirmPassword}\r\n    //               required\r\n    //               type={showPassword ? \"text\" : \"password\"}\r\n    //               className=\"py-2 rounded-lg outline-none placeholder:text-sm\"\r\n    //               placeholder=\"Confirm Password\"\r\n    //             />\r\n    //             {showPassword ? (\r\n    //               <VisibilityIcon\r\n    //                 onClick={() => setShowPassword(!showPassword)}\r\n    //                 className=\"cursor-pointer\"\r\n    //               />\r\n    //             ) : (\r\n    //               <VisibilityOffIcon\r\n    //                 onClick={() => setShowPassword(!showPassword)}\r\n    //                 className=\"cursor-pointer\"\r\n    //               />\r\n    //             )}\r\n    //           </div>\r\n    //         </div>\r\n    //         <div className={classes.adminFormButton}>\r\n    //           <button className={classes.adminFormSubmitButton} type=\"submit\">\r\n    //             Update\r\n    //           </button>\r\n    //           <button\r\n    //             onClick={() => navigate(\"/\")}\r\n    //             className={classes.adminFormClearButton}\r\n    //             type=\"button\"\r\n    //           >\r\n    //             Cancel\r\n    //           </button>\r\n    //         </div>\r\n    //         {loading && (\r\n    //           <Spinner\r\n    //             message=\"Updating\"\r\n    //             height={30}\r\n    //             width={150}\r\n    //             color=\"#111111\"\r\n    //             messageColor=\"#blue\"\r\n    //           />\r\n    //         )}\r\n    //         {(error.mismatchError || error.backendError) && (\r\n    //           <p className=\"text-red-500\">\r\n    //             {error.mismatchError || error.backendError}\r\n    //           </p>\r\n    //         )}\r\n    //       </form>\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n"]},"metadata":{},"sourceType":"module"}