{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { ADD_DANG_KY_MON, GET_ALL_SCORE_STUDENT, GET_ALL_UNIT, GET_COURSE_BY_SOMETHING, GET_STUDENT_BY_ID, SET_ERRORS } from \"../actionTypes\";\nimport * as api from \"../api/apiStudent\";\nexport const getAllUnit = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllUnit();\n    console.log(\"data\", data);\n    dispatch({\n      type: GET_ALL_UNIT,\n      payload: data.retObj[0]\n    });\n  } catch (error) {\n    console.log(\"Redux Error\", error);\n  }\n};\nexport const getAllCoursebysomething = requestData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllCoursebysomething(requestData);\n    dispatch({\n      type: GET_COURSE_BY_SOMETHING,\n      payload: data.retObj\n    });\n  } catch (error) {\n    // console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const dangKymon = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.dangKymon(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Đăng ký môn thành công!\");\n      dispatch({\n        type: ADD_DANG_KY_MON,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.status === \"error\") {\n      dispatch({\n        type: SET_ERRORS,\n        payload: error.response.data\n      });\n    } else {\n      console.log(\"Unknown error occurred\");\n    }\n  }\n};\nexport const getStudentById = id => async dispatch => {\n  try {\n    console.log(\"runing...\");\n    const {\n      data\n    } = await api.getStudentById(id);\n    console.log(\"data\", data);\n    dispatch({\n      type: GET_STUDENT_BY_ID,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"running13\");\n    console.log(error);\n  }\n};\nexport const getScoreStudent = (maSv, maKeHoach) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getScoreStudent(maSv, maKeHoach);\n    dispatch({\n      type: GET_ALL_SCORE_STUDENT,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};","map":{"version":3,"sources":["D:/PTIT/Ky2Nam4/QLSV/frontend/src/redux/actions/studentActions.js"],"names":["toast","ADD_DANG_KY_MON","GET_ALL_SCORE_STUDENT","GET_ALL_UNIT","GET_COURSE_BY_SOMETHING","GET_STUDENT_BY_ID","SET_ERRORS","api","getAllUnit","dispatch","data","console","log","type","payload","retObj","error","getAllCoursebysomething","requestData","response","dangKymon","formData","status","success","getStudentById","id","getScoreStudent","maSv","maKeHoach"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport {\r\n  ADD_DANG_KY_MON,\r\n  GET_ALL_SCORE_STUDENT,\r\n  GET_ALL_UNIT,\r\n  GET_COURSE_BY_SOMETHING,\r\n  GET_STUDENT_BY_ID,\r\n  SET_ERRORS,\r\n} from \"../actionTypes\";\r\nimport * as api from \"../api/apiStudent\";\r\n\r\nexport const getAllUnit = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllUnit();\r\n    console.log(\"data\", data);\r\n    dispatch({ type: GET_ALL_UNIT, payload: data.retObj[0] });\r\n  } catch (error) {\r\n    console.log(\"Redux Error\", error);\r\n  }\r\n};\r\n\r\nexport const getAllCoursebysomething = (requestData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllCoursebysomething(requestData);\r\n\r\n    dispatch({ type: GET_COURSE_BY_SOMETHING, payload: data.retObj });\r\n  } catch (error) {\r\n    // console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const dangKymon = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.dangKymon(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Đăng ký môn thành công!\");\r\n      dispatch({ type: ADD_DANG_KY_MON, payload: true });\r\n    } else {\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    if (\r\n      error.response &&\r\n      error.response.data &&\r\n      error.response.data.status === \"error\"\r\n    ) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    } else {\r\n      console.log(\"Unknown error occurred\");\r\n    }\r\n  }\r\n};\r\n\r\nexport const getStudentById = (id) => async (dispatch) => {\r\n  try {\r\n    console.log(\"runing...\");\r\n    const { data } = await api.getStudentById(id);\r\n    console.log(\"data\", data);\r\n\r\n    dispatch({ type: GET_STUDENT_BY_ID, payload: data });\r\n  } catch (error) {\r\n    console.log(\"running13\");\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getScoreStudent = (maSv, maKeHoach) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getScoreStudent(maSv, maKeHoach);\r\n    dispatch({ type: GET_ALL_SCORE_STUDENT, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}