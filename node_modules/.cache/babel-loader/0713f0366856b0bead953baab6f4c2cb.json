{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { ADD_COURSE_DETAIL, ADD_COURSE, ADD_DANG_KY_MON, ADD_DEPARTMENT, ADD_STUDENT, ADD_SUBJECT, ADD_TEACHER, ADD_UNIT, DELETE_COURSE, DELETE_DEPARTMENT, DELETE_STUDENT, DELETE_SUBJECT, DELETE_TEACHER, DELETE_UNIT, GET_ALL_COURSE_DETAIL, GET_ALL_COURSE, GET_ALL_DEPARTMENT, GET_ALL_STUDENT, GET_ALL_SUBJECT, GET_ALL_TEACHER, GET_ALL_TKB, GET_ALL_UNIT, GET_COURSE_UNIT, GET_SCORE_COURSE, GET_STUDENT_BY_ID, GET_STUDENT_UNIT, GET_TEACHER_DEPARTMENT, GET_UNIT_DEPARTMENT, SET_ERRORS, UPDATE_COURSE, UPDATE_DEPARTMENT, UPDATE_STUDENT, UPDATE_SUBJECT, UPDATE_TEACHER, UPDATE_UNIT, UPDATE_SCORE, DELETE_DANGKYMON, UPDATE_PASSWORD, TEACHER_UPW, STUDENT_UPW, GET_SUBJECT_DEPARTMENT, GET_COURSE_BY_KEHOACHNAM, GET_THONGKE_BY_SOMETHING, GET_COURSE_BY_SOMETHING, GET_ALL_COURSE_BY_MKH, GET_ALL_COURSE_BY_UNIMKH, GET_COURSEDETAIL_COURSE } from \"../actionTypes\";\nimport * as api from \"../api\"; //getAll\n\nexport const getAllDepartment = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllDepartment();\n    dispatch({\n      type: GET_ALL_DEPARTMENT,\n      payload: data.retObj[0]\n    });\n  } catch (error) {\n    console.log(\"Redux Error\", error);\n  }\n};\nexport const getAllTeacher = data => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllTeacher(data);\n    console.log(\"data\", data);\n    dispatch({\n      type: GET_ALL_TEACHER,\n      payload: data.retObj[0]\n    });\n  } catch (error) {\n    console.log(\"Redux Error\", error);\n  }\n};\nexport const getAllUnit = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllUnit();\n    dispatch({\n      type: GET_ALL_UNIT,\n      payload: data.retObj[0]\n    });\n  } catch (error) {\n    console.log(\"Redux Error\", error);\n  }\n};\nexport const getAllTKB = requestData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllTKB(requestData);\n    console.log(\"data\", data.retObj);\n    dispatch({\n      type: GET_ALL_TKB,\n      payload: data.retObj\n    });\n  } catch (error) {\n    // console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getAllSubject = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllSubject();\n    dispatch({\n      type: GET_ALL_SUBJECT,\n      payload: data.retObj[0]\n    });\n  } catch (error) {\n    console.log(\"Redux Error\", error);\n  }\n};\nexport const getAllStudent = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllStudent();\n    dispatch({\n      type: GET_ALL_STUDENT,\n      payload: data.retObj[0]\n    });\n  } catch (error) {\n    console.log(\"Redux Error\", error);\n  }\n};\nexport const getAllCourse = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllCourse();\n    dispatch({\n      type: GET_ALL_COURSE,\n      payload: data.retObj[0]\n    });\n  } catch (error) {\n    console.log(\"Redux Error\", error);\n  }\n};\nexport const getAllCourseDetail = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllCourseDetail();\n    dispatch({\n      type: GET_ALL_COURSE_DETAIL,\n      payload: data.retObj[0]\n    });\n  } catch (error) {\n    console.log(\"Redux Error\", error);\n  }\n}; // Add\n\nexport const addDepartment = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addDepartment(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Thêm khoa mới thành công!\");\n      dispatch({\n        type: ADD_DEPARTMENT,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.status === \"error\") {\n      dispatch({\n        type: SET_ERRORS,\n        payload: error.response.data\n      });\n    } else {\n      console.log(\"Unknown error occurred\");\n    }\n  }\n};\nexport const addTeacher = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addTeacher(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Thêm giảng viên mới thành công!\");\n      dispatch({\n        type: ADD_TEACHER,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.status === \"error\") {\n      dispatch({\n        type: SET_ERRORS,\n        payload: error.response.data\n      });\n    } else {\n      console.log(\"Unknown error occurred\");\n    }\n  }\n};\nexport const addUnit = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addUnit(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Thêm lớp học mới thành công!\");\n      dispatch({\n        type: ADD_UNIT,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.status === \"error\") {\n      dispatch({\n        type: SET_ERRORS,\n        payload: error.response.data\n      });\n    } else {\n      console.log(\"Unknown error occurred\");\n    }\n  }\n};\nexport const addStudent = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addStudent(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Thêm sinh viên mới thành công!\");\n      dispatch({\n        type: ADD_STUDENT,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.status === \"error\") {\n      dispatch({\n        type: SET_ERRORS,\n        payload: error.response.data\n      });\n    } else {\n      console.log(\"Unknown error occurred\");\n    }\n  }\n};\nexport const addSubject = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addSubject(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Thêm môn học mới thành công!\");\n      dispatch({\n        type: ADD_SUBJECT,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.status === \"error\") {\n      dispatch({\n        type: SET_ERRORS,\n        payload: error.response.data\n      });\n    } else {\n      console.log(\"Unknown error occurred\");\n    }\n  }\n};\nexport const addCourse = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addCourse(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Thêm lớp tín chỉ mới thành công!\");\n      dispatch({\n        type: ADD_COURSE,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.status === \"error\") {\n      dispatch({\n        type: SET_ERRORS,\n        payload: error.response.data\n      });\n    } else {\n      console.log(\"Unknown error occurred\");\n    }\n  }\n};\nexport const addCourseDetail = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addCourseDetail(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Thêm chi tiết lớp tín chỉ mới thành công!\");\n      dispatch({\n        type: ADD_COURSE_DETAIL,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.status === \"error\") {\n      dispatch({\n        type: SET_ERRORS,\n        payload: error.response.data\n      });\n    } else {\n      console.log(\"Unknown error occurred\");\n    }\n  }\n}; //update\n\nexport const updateDepartment = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateDepartment(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Chỉnh sửa Khoa thành công!\");\n      dispatch({\n        type: UPDATE_DEPARTMENT,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const updateUnit = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateUnit(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Chỉnh sửa lớp học thành công!\");\n      dispatch({\n        type: UPDATE_UNIT,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const updateSubject = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateSubject(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Chỉnh sửa môn học thành công!\");\n      dispatch({\n        type: UPDATE_SUBJECT,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const updateStudent = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateStudent(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Chỉnh sửa sinh viên thành công!\");\n      dispatch({\n        type: UPDATE_STUDENT,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const updateTeacher = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateTeacher(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Chỉnh sửa giảng viên thành công!\");\n      dispatch({\n        type: UPDATE_TEACHER,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const updateCourse = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateCourse(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Chỉnh sửa lớp tín chỉ thành công!\");\n      dispatch({\n        type: UPDATE_COURSE,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const updateScore = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateScore(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Chỉnh sửa điểm thành công!\");\n      dispatch({\n        type: UPDATE_SCORE,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const updatePassword = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePassword(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Đối mật khẩu thành công!\");\n      dispatch({\n        type: UPDATE_PASSWORD,\n        payload: true\n      });\n    } else {\n      console.log(\"vô đây\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n      toast.error(\"Đổi mật khẩu méo thành không!\");\n    }\n  } catch (error) {\n    console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const teacherUpw = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.teacherUpw(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Đối mật khẩu thành công!\");\n      dispatch({\n        type: TEACHER_UPW,\n        payload: true\n      });\n    } else {\n      console.log(\"vô đây\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n      toast.error(\"Đổi mật khẩu méo thành không!\");\n    }\n  } catch (error) {\n    console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const studentUpw = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.studentUpw(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Đối mật khẩu thành công!\");\n      dispatch({\n        type: STUDENT_UPW,\n        payload: true\n      });\n    } else {\n      console.log(\"vô đây\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n      toast.error(\"Đổi mật khẩu méo thành không!\");\n    }\n  } catch (error) {\n    console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n}; // delete\n\nexport const deleteDepartment = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteDepartment(formData);\n\n    if (data.status === \"success\" && data.retObj.length > 0) {\n      toast.success(\"Xóa khoa thành công!\");\n      dispatch({\n        type: DELETE_DEPARTMENT,\n        payload: true\n      });\n    } else {\n      toast.error(\"Xóa Khoa này không thành không!\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: \"Xóa Khoa không Thành công\"\n      });\n    }\n  } catch (error) {\n    // console.log(\"vô đây nè\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: \"Xóa Khoa không Thành công\"\n    });\n  }\n};\nexport const deleteUnit = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteUnit(formData);\n\n    if (data.status === \"success\" && data.retObj.length > 0) {\n      toast.success(\"Xóa lớp học thành công!\");\n      dispatch({\n        type: DELETE_UNIT,\n        payload: true\n      });\n    } else {\n      toast.error(\"Xóa Lớp này không thành không!\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: \"Xóa lớp không thành công\"\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const deleteStudent = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteStudent(formData);\n\n    if (data.status === \"success\" && data.retObj.length > 0) {\n      toast.success(\"Xóa sinh viên thành công!\");\n      dispatch({\n        type: DELETE_STUDENT,\n        payload: true\n      });\n    } else {\n      toast.error(\"Xóa sinh viên này không thành không!\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: \"Xóa sinh viên không thành công\"\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: \"Xóa sinh viên không Thành công\"\n    });\n  }\n};\nexport const deleteTeacher = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteTeacher(formData);\n\n    if (data.status === \"success\" && data.retObj.length > 0) {\n      toast.success(\"Xóa giảng viên thành công!\");\n      dispatch({\n        type: DELETE_TEACHER,\n        payload: true\n      });\n    } else {\n      toast.error(\"Xóa giảng viên này không thành không!\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: \"Xóa giảng viên không thành công\"\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: \"Xóa giảng viên không Thành công\"\n    });\n  }\n};\nexport const deleteCourse = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteCourse(formData);\n\n    if (data.status === \"success\" && data.retObj.length > 0) {\n      toast.success(\"Xóa lớp tín chỉ thành công!\");\n      dispatch({\n        type: DELETE_COURSE,\n        payload: true\n      });\n    } else {\n      toast.error(\"Xóa lớp tín chỉ này không thành không!\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: \"Xóa lớp tín chỉ không thành công\"\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: \"Xóa lớp tín chỉ không Thành công\"\n    });\n  }\n};\nexport const deleteSubject = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteSubject(formData);\n\n    if (data.status === \"success\" && data.retObj.length > 0) {\n      toast.success(\"Xóa môn học thành công!\");\n      dispatch({\n        type: DELETE_SUBJECT,\n        payload: true\n      });\n    } else {\n      toast.error(\"Xóa môn học này không thành không!\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: \"Xóa Môn học không thành công\"\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: \"Xóa Môn học không Thành công\"\n    });\n  }\n};\nexport const deleteDangkymon = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteDangkymon(formData);\n\n    if (data.status === \"success\" && data.retObj.length > 0) {\n      toast.success(\"Xóa điểm thành công!\");\n      dispatch({\n        type: DELETE_DANGKYMON,\n        payload: true\n      });\n    } else {\n      toast.error(\"Xóa điểm không thành công!\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: \"Xóa điểm không thành công\"\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: \"Xóa điểm không Thành công\"\n    });\n  }\n}; // get...bysomething\n\nexport const getTeacherDepartment = department => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getTeacherDepartment(department);\n    dispatch({\n      type: GET_TEACHER_DEPARTMENT,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getStudentUnit = unit => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getStudentUnit(unit);\n    dispatch({\n      type: GET_STUDENT_UNIT,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getUnitDepartment = department => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getUnitDepartment(department);\n    dispatch({\n      type: GET_UNIT_DEPARTMENT,\n      payload: data\n    });\n  } catch (error) {\n    // console.log(\"error.response.data\", error.response.data);\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getCourseUnit = unit => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getCourseUnit(unit);\n    dispatch({\n      type: GET_COURSE_UNIT,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getScoreCourse = course => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getScoreCourse(course);\n    dispatch({\n      type: GET_SCORE_COURSE,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getSubjectDepartment = department => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getSubjectDepartment(department);\n    dispatch({\n      type: GET_SUBJECT_DEPARTMENT,\n      payload: data\n    });\n  } catch (error) {\n    // console.log(\"error.response.data\", error.response.data);\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n}; //\n\nexport const getAllCoursebyUnitMKH = requestData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllCoursebyUnitMKH(requestData);\n    dispatch({\n      type: GET_ALL_COURSE_BY_UNIMKH,\n      payload: data.retObj\n    });\n  } catch (error) {\n    // console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getAllCourseDetailCourse = course => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllCourseDetailCourse(course);\n    dispatch({\n      type: GET_COURSEDETAIL_COURSE,\n      payload: data.retObj\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n}; // getbyid\n\nexport const getStudentById = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getStudentById(id);\n    dispatch({\n      type: GET_STUDENT_BY_ID,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getCoursebyKeHoachNam = requestData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getCoursebyKeHoachNam(requestData);\n    console.log(\"data\", data);\n    dispatch({\n      type: GET_COURSE_BY_KEHOACHNAM,\n      payload: data.retObj\n    });\n  } catch (error) {\n    // console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getThongkebysomething = requestData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getThongkebysomething(requestData);\n    dispatch({\n      type: GET_THONGKE_BY_SOMETHING,\n      payload: data.retObj\n    });\n  } catch (error) {\n    // console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getAllCoursebysomething = requestData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllCoursebysomething(requestData);\n    dispatch({\n      type: GET_COURSE_BY_SOMETHING,\n      payload: data.retObj\n    });\n  } catch (error) {\n    // console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getAllCoursebyMKH = requestData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllCoursebyMKH(requestData);\n    dispatch({\n      type: GET_ALL_COURSE_BY_MKH,\n      payload: data.retObj\n    });\n  } catch (error) {\n    // console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};","map":{"version":3,"sources":["D:/PTIT/Ky2Nam4/QLSV/frontend/src/redux/actions/adminActions.js"],"names":["toast","ADD_COURSE_DETAIL","ADD_COURSE","ADD_DANG_KY_MON","ADD_DEPARTMENT","ADD_STUDENT","ADD_SUBJECT","ADD_TEACHER","ADD_UNIT","DELETE_COURSE","DELETE_DEPARTMENT","DELETE_STUDENT","DELETE_SUBJECT","DELETE_TEACHER","DELETE_UNIT","GET_ALL_COURSE_DETAIL","GET_ALL_COURSE","GET_ALL_DEPARTMENT","GET_ALL_STUDENT","GET_ALL_SUBJECT","GET_ALL_TEACHER","GET_ALL_TKB","GET_ALL_UNIT","GET_COURSE_UNIT","GET_SCORE_COURSE","GET_STUDENT_BY_ID","GET_STUDENT_UNIT","GET_TEACHER_DEPARTMENT","GET_UNIT_DEPARTMENT","SET_ERRORS","UPDATE_COURSE","UPDATE_DEPARTMENT","UPDATE_STUDENT","UPDATE_SUBJECT","UPDATE_TEACHER","UPDATE_UNIT","UPDATE_SCORE","DELETE_DANGKYMON","UPDATE_PASSWORD","TEACHER_UPW","STUDENT_UPW","GET_SUBJECT_DEPARTMENT","GET_COURSE_BY_KEHOACHNAM","GET_THONGKE_BY_SOMETHING","GET_COURSE_BY_SOMETHING","GET_ALL_COURSE_BY_MKH","GET_ALL_COURSE_BY_UNIMKH","GET_COURSEDETAIL_COURSE","api","getAllDepartment","dispatch","data","type","payload","retObj","error","console","log","getAllTeacher","getAllUnit","getAllTKB","requestData","response","getAllSubject","getAllStudent","getAllCourse","getAllCourseDetail","addDepartment","formData","status","success","addTeacher","addUnit","addStudent","addSubject","addCourse","addCourseDetail","updateDepartment","updateUnit","updateSubject","updateStudent","updateTeacher","updateCourse","updateScore","updatePassword","teacherUpw","studentUpw","deleteDepartment","length","deleteUnit","deleteStudent","deleteTeacher","deleteCourse","deleteSubject","deleteDangkymon","getTeacherDepartment","department","getStudentUnit","unit","getUnitDepartment","getCourseUnit","getScoreCourse","course","getSubjectDepartment","getAllCoursebyUnitMKH","getAllCourseDetailCourse","getStudentById","id","getCoursebyKeHoachNam","getThongkebysomething","getAllCoursebysomething","getAllCoursebyMKH"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport {\r\n  ADD_COURSE_DETAIL,\r\n  ADD_COURSE,\r\n  ADD_DANG_KY_MON,\r\n  ADD_DEPARTMENT,\r\n  ADD_STUDENT,\r\n  ADD_SUBJECT,\r\n  ADD_TEACHER,\r\n  ADD_UNIT,\r\n  DELETE_COURSE,\r\n  DELETE_DEPARTMENT,\r\n  DELETE_STUDENT,\r\n  DELETE_SUBJECT,\r\n  DELETE_TEACHER,\r\n  DELETE_UNIT,\r\n  GET_ALL_COURSE_DETAIL,\r\n  GET_ALL_COURSE,\r\n  GET_ALL_DEPARTMENT,\r\n  GET_ALL_STUDENT,\r\n  GET_ALL_SUBJECT,\r\n  GET_ALL_TEACHER,\r\n  GET_ALL_TKB,\r\n  GET_ALL_UNIT,\r\n  GET_COURSE_UNIT,\r\n  GET_SCORE_COURSE,\r\n  GET_STUDENT_BY_ID,\r\n  GET_STUDENT_UNIT,\r\n  GET_TEACHER_DEPARTMENT,\r\n  GET_UNIT_DEPARTMENT,\r\n  SET_ERRORS,\r\n  UPDATE_COURSE,\r\n  UPDATE_DEPARTMENT,\r\n  UPDATE_STUDENT,\r\n  UPDATE_SUBJECT,\r\n  UPDATE_TEACHER,\r\n  UPDATE_UNIT,\r\n  UPDATE_SCORE,\r\n  DELETE_DANGKYMON,\r\n  UPDATE_PASSWORD,\r\n  TEACHER_UPW,\r\n  STUDENT_UPW,\r\n  GET_SUBJECT_DEPARTMENT,\r\n  GET_COURSE_BY_KEHOACHNAM,\r\n  GET_THONGKE_BY_SOMETHING,\r\n  GET_COURSE_BY_SOMETHING,\r\n  GET_ALL_COURSE_BY_MKH,\r\n  GET_ALL_COURSE_BY_UNIMKH,\r\n  GET_COURSEDETAIL_COURSE,\r\n} from \"../actionTypes\";\r\nimport * as api from \"../api\";\r\n//getAll\r\nexport const getAllDepartment = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllDepartment();\r\n    dispatch({ type: GET_ALL_DEPARTMENT, payload: data.retObj[0] });\r\n  } catch (error) {\r\n    console.log(\"Redux Error\", error);\r\n  }\r\n};\r\nexport const getAllTeacher = (data) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllTeacher(data);\r\n    console.log(\"data\", data);\r\n\r\n    dispatch({ type: GET_ALL_TEACHER, payload: data.retObj[0] });\r\n  } catch (error) {\r\n    console.log(\"Redux Error\", error);\r\n  }\r\n};\r\nexport const getAllUnit = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllUnit();\r\n    dispatch({ type: GET_ALL_UNIT, payload: data.retObj[0] });\r\n  } catch (error) {\r\n    console.log(\"Redux Error\", error);\r\n  }\r\n};\r\nexport const getAllTKB = (requestData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllTKB(requestData);\r\n    console.log(\"data\", data.retObj);\r\n    dispatch({ type: GET_ALL_TKB, payload: data.retObj });\r\n  } catch (error) {\r\n    // console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const getAllSubject = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllSubject();\r\n    dispatch({ type: GET_ALL_SUBJECT, payload: data.retObj[0] });\r\n  } catch (error) {\r\n    console.log(\"Redux Error\", error);\r\n  }\r\n};\r\nexport const getAllStudent = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllStudent();\r\n    dispatch({ type: GET_ALL_STUDENT, payload: data.retObj[0] });\r\n  } catch (error) {\r\n    console.log(\"Redux Error\", error);\r\n  }\r\n};\r\nexport const getAllCourse = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllCourse();\r\n    dispatch({ type: GET_ALL_COURSE, payload: data.retObj[0] });\r\n  } catch (error) {\r\n    console.log(\"Redux Error\", error);\r\n  }\r\n};\r\nexport const getAllCourseDetail = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllCourseDetail();\r\n    dispatch({ type: GET_ALL_COURSE_DETAIL, payload: data.retObj[0] });\r\n  } catch (error) {\r\n    console.log(\"Redux Error\", error);\r\n  }\r\n};\r\n\r\n// Add\r\nexport const addDepartment = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addDepartment(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Thêm khoa mới thành công!\");\r\n      dispatch({ type: ADD_DEPARTMENT, payload: true });\r\n    } else {\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    if (\r\n      error.response &&\r\n      error.response.data &&\r\n      error.response.data.status === \"error\"\r\n    ) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    } else {\r\n      console.log(\"Unknown error occurred\");\r\n    }\r\n  }\r\n};\r\nexport const addTeacher = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addTeacher(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Thêm giảng viên mới thành công!\");\r\n      dispatch({ type: ADD_TEACHER, payload: true });\r\n    } else {\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    if (\r\n      error.response &&\r\n      error.response.data &&\r\n      error.response.data.status === \"error\"\r\n    ) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    } else {\r\n      console.log(\"Unknown error occurred\");\r\n    }\r\n  }\r\n};\r\nexport const addUnit = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addUnit(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Thêm lớp học mới thành công!\");\r\n      dispatch({ type: ADD_UNIT, payload: true });\r\n    } else {\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    if (\r\n      error.response &&\r\n      error.response.data &&\r\n      error.response.data.status === \"error\"\r\n    ) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    } else {\r\n      console.log(\"Unknown error occurred\");\r\n    }\r\n  }\r\n};\r\nexport const addStudent = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addStudent(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Thêm sinh viên mới thành công!\");\r\n      dispatch({ type: ADD_STUDENT, payload: true });\r\n    } else {\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    if (\r\n      error.response &&\r\n      error.response.data &&\r\n      error.response.data.status === \"error\"\r\n    ) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    } else {\r\n      console.log(\"Unknown error occurred\");\r\n    }\r\n  }\r\n};\r\nexport const addSubject = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addSubject(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Thêm môn học mới thành công!\");\r\n      dispatch({ type: ADD_SUBJECT, payload: true });\r\n    } else {\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    if (\r\n      error.response &&\r\n      error.response.data &&\r\n      error.response.data.status === \"error\"\r\n    ) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    } else {\r\n      console.log(\"Unknown error occurred\");\r\n    }\r\n  }\r\n};\r\nexport const addCourse = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addCourse(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Thêm lớp tín chỉ mới thành công!\");\r\n      dispatch({ type: ADD_COURSE, payload: true });\r\n    } else {\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    if (\r\n      error.response &&\r\n      error.response.data &&\r\n      error.response.data.status === \"error\"\r\n    ) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    } else {\r\n      console.log(\"Unknown error occurred\");\r\n    }\r\n  }\r\n};\r\nexport const addCourseDetail = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addCourseDetail(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Thêm chi tiết lớp tín chỉ mới thành công!\");\r\n      dispatch({ type: ADD_COURSE_DETAIL, payload: true });\r\n    } else {\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    if (\r\n      error.response &&\r\n      error.response.data &&\r\n      error.response.data.status === \"error\"\r\n    ) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    } else {\r\n      console.log(\"Unknown error occurred\");\r\n    }\r\n  }\r\n};\r\n\r\n//update\r\n\r\nexport const updateDepartment = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateDepartment(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Chỉnh sửa Khoa thành công!\");\r\n      dispatch({ type: UPDATE_DEPARTMENT, payload: true });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const updateUnit = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateUnit(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Chỉnh sửa lớp học thành công!\");\r\n      dispatch({ type: UPDATE_UNIT, payload: true });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const updateSubject = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateSubject(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Chỉnh sửa môn học thành công!\");\r\n      dispatch({ type: UPDATE_SUBJECT, payload: true });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const updateStudent = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateStudent(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Chỉnh sửa sinh viên thành công!\");\r\n      dispatch({ type: UPDATE_STUDENT, payload: true });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const updateTeacher = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateTeacher(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Chỉnh sửa giảng viên thành công!\");\r\n      dispatch({ type: UPDATE_TEACHER, payload: true });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const updateCourse = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateCourse(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Chỉnh sửa lớp tín chỉ thành công!\");\r\n      dispatch({ type: UPDATE_COURSE, payload: true });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const updateScore = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateScore(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Chỉnh sửa điểm thành công!\");\r\n      dispatch({ type: UPDATE_SCORE, payload: true });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const updatePassword = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePassword(formData);\r\n\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Đối mật khẩu thành công!\");\r\n      dispatch({ type: UPDATE_PASSWORD, payload: true });\r\n    } else {\r\n      console.log(\"vô đây\");\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n      toast.error(\"Đổi mật khẩu méo thành không!\");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const teacherUpw = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.teacherUpw(formData);\r\n\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Đối mật khẩu thành công!\");\r\n      dispatch({ type: TEACHER_UPW, payload: true });\r\n    } else {\r\n      console.log(\"vô đây\");\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n      toast.error(\"Đổi mật khẩu méo thành không!\");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const studentUpw = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.studentUpw(formData);\r\n\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Đối mật khẩu thành công!\");\r\n      dispatch({ type: STUDENT_UPW, payload: true });\r\n    } else {\r\n      console.log(\"vô đây\");\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n      toast.error(\"Đổi mật khẩu méo thành không!\");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n// delete\r\nexport const deleteDepartment = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteDepartment(formData);\r\n    if (data.status === \"success\" && data.retObj.length > 0) {\r\n      toast.success(\"Xóa khoa thành công!\");\r\n      dispatch({ type: DELETE_DEPARTMENT, payload: true });\r\n    } else {\r\n      toast.error(\"Xóa Khoa này không thành không!\");\r\n      dispatch({ type: SET_ERRORS, payload: \"Xóa Khoa không Thành công\" });\r\n    }\r\n  } catch (error) {\r\n    // console.log(\"vô đây nè\");\r\n    dispatch({ type: SET_ERRORS, payload: \"Xóa Khoa không Thành công\" });\r\n  }\r\n};\r\n\r\nexport const deleteUnit = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteUnit(formData);\r\n    if (data.status === \"success\" && data.retObj.length > 0) {\r\n      toast.success(\"Xóa lớp học thành công!\");\r\n      dispatch({ type: DELETE_UNIT, payload: true });\r\n    } else {\r\n      toast.error(\"Xóa Lớp này không thành không!\");\r\n      dispatch({ type: SET_ERRORS, payload: \"Xóa lớp không thành công\" });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const deleteStudent = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteStudent(formData);\r\n    if (data.status === \"success\" && data.retObj.length > 0) {\r\n      toast.success(\"Xóa sinh viên thành công!\");\r\n      dispatch({ type: DELETE_STUDENT, payload: true });\r\n    } else {\r\n      toast.error(\"Xóa sinh viên này không thành không!\");\r\n      dispatch({ type: SET_ERRORS, payload: \"Xóa sinh viên không thành công\" });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: \"Xóa sinh viên không Thành công\" });\r\n  }\r\n};\r\nexport const deleteTeacher = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteTeacher(formData);\r\n    if (data.status === \"success\" && data.retObj.length > 0) {\r\n      toast.success(\"Xóa giảng viên thành công!\");\r\n      dispatch({ type: DELETE_TEACHER, payload: true });\r\n    } else {\r\n      toast.error(\"Xóa giảng viên này không thành không!\");\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: \"Xóa giảng viên không thành công\",\r\n      });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: \"Xóa giảng viên không Thành công\" });\r\n  }\r\n};\r\nexport const deleteCourse = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteCourse(formData);\r\n    if (data.status === \"success\" && data.retObj.length > 0) {\r\n      toast.success(\"Xóa lớp tín chỉ thành công!\");\r\n      dispatch({ type: DELETE_COURSE, payload: true });\r\n    } else {\r\n      toast.error(\"Xóa lớp tín chỉ này không thành không!\");\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: \"Xóa lớp tín chỉ không thành công\",\r\n      });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: \"Xóa lớp tín chỉ không Thành công\" });\r\n  }\r\n};\r\nexport const deleteSubject = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteSubject(formData);\r\n    if (data.status === \"success\" && data.retObj.length > 0) {\r\n      toast.success(\"Xóa môn học thành công!\");\r\n      dispatch({ type: DELETE_SUBJECT, payload: true });\r\n    } else {\r\n      toast.error(\"Xóa môn học này không thành không!\");\r\n      dispatch({ type: SET_ERRORS, payload: \"Xóa Môn học không thành công\" });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: \"Xóa Môn học không Thành công\" });\r\n  }\r\n};\r\nexport const deleteDangkymon = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteDangkymon(formData);\r\n    if (data.status === \"success\" && data.retObj.length > 0) {\r\n      toast.success(\"Xóa điểm thành công!\");\r\n      dispatch({ type: DELETE_DANGKYMON, payload: true });\r\n    } else {\r\n      toast.error(\"Xóa điểm không thành công!\");\r\n      dispatch({ type: SET_ERRORS, payload: \"Xóa điểm không thành công\" });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: \"Xóa điểm không Thành công\" });\r\n  }\r\n};\r\n// get...bysomething\r\nexport const getTeacherDepartment = (department) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getTeacherDepartment(department);\r\n    dispatch({ type: GET_TEACHER_DEPARTMENT, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const getStudentUnit = (unit) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getStudentUnit(unit);\r\n    dispatch({ type: GET_STUDENT_UNIT, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const getUnitDepartment = (department) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getUnitDepartment(department);\r\n    dispatch({ type: GET_UNIT_DEPARTMENT, payload: data });\r\n  } catch (error) {\r\n    // console.log(\"error.response.data\", error.response.data);\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const getCourseUnit = (unit) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getCourseUnit(unit);\r\n    dispatch({ type: GET_COURSE_UNIT, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const getScoreCourse = (course) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getScoreCourse(course);\r\n    dispatch({ type: GET_SCORE_COURSE, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const getSubjectDepartment = (department) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getSubjectDepartment(department);\r\n    dispatch({ type: GET_SUBJECT_DEPARTMENT, payload: data });\r\n  } catch (error) {\r\n    // console.log(\"error.response.data\", error.response.data);\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n//\r\nexport const getAllCoursebyUnitMKH = (requestData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllCoursebyUnitMKH(requestData);\r\n\r\n    dispatch({ type: GET_ALL_COURSE_BY_UNIMKH, payload: data.retObj });\r\n  } catch (error) {\r\n    // console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const getAllCourseDetailCourse = (course) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllCourseDetailCourse(course);\r\n    dispatch({ type: GET_COURSEDETAIL_COURSE, payload: data.retObj });\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n// getbyid\r\nexport const getStudentById = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getStudentById(id);\r\n    dispatch({ type: GET_STUDENT_BY_ID, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getCoursebyKeHoachNam = (requestData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getCoursebyKeHoachNam(requestData);\r\n\r\n    console.log(\"data\", data);\r\n    dispatch({ type: GET_COURSE_BY_KEHOACHNAM, payload: data.retObj });\r\n  } catch (error) {\r\n    // console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const getThongkebysomething = (requestData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getThongkebysomething(requestData);\r\n\r\n    dispatch({ type: GET_THONGKE_BY_SOMETHING, payload: data.retObj });\r\n  } catch (error) {\r\n    // console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const getAllCoursebysomething = (requestData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllCoursebysomething(requestData);\r\n\r\n    dispatch({ type: GET_COURSE_BY_SOMETHING, payload: data.retObj });\r\n  } catch (error) {\r\n    // console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const getAllCoursebyMKH = (requestData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllCoursebyMKH(requestData);\r\n\r\n    dispatch({ type: GET_ALL_COURSE_BY_MKH, payload: data.retObj });\r\n  } catch (error) {\r\n    // console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}