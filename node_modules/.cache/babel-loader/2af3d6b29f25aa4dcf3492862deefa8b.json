{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { LOGIN, SET_ERRORS } from \"../actionTypes\";\nimport * as api from \"../api\"; // export const userLogin = (formData, navigate) => async (dispatch) => {\n//   try {\n//     const { data } = await api.userLogin(formData);\n//     if (data.status === \"success\") {\n//       // dispatch({ type: LOGIN, data });\n//       const { roles } = data.retObj;\n//       const userRole = roles[0];\n//       dispatch({ type: LOGIN, data: { role: userRole } });\n//       toast.success(\"Đăng nhập thành công!\");\n//       if (data.retObj.roles[0] === \"ROLE_SINHVIEN\")\n//         navigate(\"/admin/studentHome\");\n//       else if (data.retObj.roles[0] === \"ROLE_ADMIN\") navigate(\"/admin/home\");\n//       else navigate(\"/admin/teacherHome\");\n//     } else {\n//       toast.error(\"Username hoặc Password chưa đúng!\");\n//     }\n//   } catch (error) {\n//     dispatch({ type: SET_ERRORS, payload: error.response.data });\n//   }\n// }\n\nexport const userLogin = (formData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.userLogin(formData);\n\n    if (data.status === \"success\") {\n      const {\n        roles\n      } = data.retObj;\n      const userRole = roles[0]; // Bổ sung trường \"role\" vào đối tượng dữ liệu người dùng\n\n      const userData = { ...data,\n        role: userRole\n      };\n      dispatch({\n        type: LOGIN,\n        data: userData\n      });\n      toast.success(\"Đăng nhập thành công!\");\n\n      if (userRole === \"ROLE_SINHVIEN\") {\n        localStorage.setItem(\"studentUser\", JSON.stringify(userData));\n        navigate(\"/admin/studentHome\");\n      } else if (userRole === \"ROLE_ADMIN\") {\n        localStorage.setItem(\"adminUser\", JSON.stringify(userData));\n        navigate(\"/admin/home\");\n      } else {\n        localStorage.setItem(\"teacherUser\", JSON.stringify(userData));\n        navigate(\"/admin/teacherHome\");\n      }\n    } else {\n      toast.error(\"Username hoặc Password chưa đúng!\");\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};","map":{"version":3,"sources":["D:/PTIT/Ky2Nam4/QLSV/frontend/src/redux/actions/loginActions.js"],"names":["toast","LOGIN","SET_ERRORS","api","userLogin","formData","navigate","dispatch","data","status","roles","retObj","userRole","userData","role","type","success","localStorage","setItem","JSON","stringify","error","payload","response"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,gBAAlC;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,MAAOC,QAAP,IAAoB;AACnE,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACC,SAAJ,CAAcC,QAAd,CAAvB;;AAEA,QAAIG,IAAI,CAACC,MAAL,KAAgB,SAApB,EAA+B;AAC7B,YAAM;AAAEC,QAAAA;AAAF,UAAYF,IAAI,CAACG,MAAvB;AACA,YAAMC,QAAQ,GAAGF,KAAK,CAAC,CAAD,CAAtB,CAF6B,CAI7B;;AACA,YAAMG,QAAQ,GAAG,EAAE,GAAGL,IAAL;AAAWM,QAAAA,IAAI,EAAEF;AAAjB,OAAjB;AACAL,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEd,KAAR;AAAeO,QAAAA,IAAI,EAAEK;AAArB,OAAD,CAAR;AACAb,MAAAA,KAAK,CAACgB,OAAN,CAAc,uBAAd;;AACA,UAAIJ,QAAQ,KAAK,eAAjB,EAAkC;AAChCK,QAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeP,QAAf,CAApC;AACAP,QAAAA,QAAQ,CAAC,oBAAD,CAAR;AACD,OAHD,MAGO,IAAIM,QAAQ,KAAK,YAAjB,EAA+B;AACpCK,QAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeP,QAAf,CAAlC;AACAP,QAAAA,QAAQ,CAAC,aAAD,CAAR;AACD,OAHM,MAGA;AACLW,QAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeP,QAAf,CAApC;AACAP,QAAAA,QAAQ,CAAC,oBAAD,CAAR;AACD;AACF,KAlBD,MAkBO;AACLN,MAAAA,KAAK,CAACqB,KAAN,CAAY,mCAAZ;AACD;AACF,GAxBD,CAwBE,OAAOA,KAAP,EAAc;AACdd,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEb,UAAR;AAAoBoB,MAAAA,OAAO,EAAED,KAAK,CAACE,QAAN,CAAef;AAA5C,KAAD,CAAR;AACD;AACF,CA5BM","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport { LOGIN, SET_ERRORS } from \"../actionTypes\";\r\nimport * as api from \"../api\";\r\n\r\n// export const userLogin = (formData, navigate) => async (dispatch) => {\r\n//   try {\r\n//     const { data } = await api.userLogin(formData);\r\n\r\n//     if (data.status === \"success\") {\r\n//       // dispatch({ type: LOGIN, data });\r\n//       const { roles } = data.retObj;\r\n//       const userRole = roles[0];\r\n\r\n//       dispatch({ type: LOGIN, data: { role: userRole } });\r\n\r\n//       toast.success(\"Đăng nhập thành công!\");\r\n//       if (data.retObj.roles[0] === \"ROLE_SINHVIEN\")\r\n//         navigate(\"/admin/studentHome\");\r\n//       else if (data.retObj.roles[0] === \"ROLE_ADMIN\") navigate(\"/admin/home\");\r\n//       else navigate(\"/admin/teacherHome\");\r\n//     } else {\r\n//       toast.error(\"Username hoặc Password chưa đúng!\");\r\n//     }\r\n//   } catch (error) {\r\n//     dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n//   }\r\n\r\n// }\r\n\r\nexport const userLogin = (formData, navigate) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.userLogin(formData);\r\n\r\n    if (data.status === \"success\") {\r\n      const { roles } = data.retObj;\r\n      const userRole = roles[0];\r\n\r\n      // Bổ sung trường \"role\" vào đối tượng dữ liệu người dùng\r\n      const userData = { ...data, role: userRole };\r\n      dispatch({ type: LOGIN, data: userData });\r\n      toast.success(\"Đăng nhập thành công!\");\r\n      if (userRole === \"ROLE_SINHVIEN\") {\r\n        localStorage.setItem(\"studentUser\", JSON.stringify(userData));\r\n        navigate(\"/admin/studentHome\");\r\n      } else if (userRole === \"ROLE_ADMIN\") {\r\n        localStorage.setItem(\"adminUser\", JSON.stringify(userData));\r\n        navigate(\"/admin/home\");\r\n      } else {\r\n        localStorage.setItem(\"teacherUser\", JSON.stringify(userData));\r\n        navigate(\"/admin/teacherHome\");\r\n      }\r\n    } else {\r\n      toast.error(\"Username hoặc Password chưa đúng!\");\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}