{"ast":null,"code":"var _jsxFileName = \"D:\\\\PTIT\\\\Ky2Nam4\\\\QLSV\\\\frontend\\\\src\\\\components\\\\admin\\\\thongke\\\\Body.js\";\nimport React from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Legend } from \"recharts\"; // dữ liệu số 1: là dữ kiệu nạp vô biểu đồ để vẽ được liền\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: \"Điểm 0\",\n  ĐIỂM: 2\n}, {\n  name: \"Điểm 1\",\n  ĐIỂM: 6\n}, {\n  name: \"Điểm 2\",\n  ĐIỂM: 3\n}, {\n  name: \"Điểm 3\",\n  ĐIỂM: 8\n}, {\n  name: \"Điểm 4\",\n  ĐIỂM: 4\n}, {\n  name: \"Điểm 5\",\n  ĐIỂM: 8\n}, {\n  name: \"Điểm 6\",\n  ĐIỂM: 8\n}, {\n  name: \"Điểm 7\",\n  ĐIỂM: 20\n}, {\n  name: \"Điểm 8\",\n  ĐIỂM: 8\n}, {\n  name: \"Điểm 9\",\n  ĐIỂM: 3\n}, {\n  name: \"Điểm 10\",\n  ĐIỂM: 10\n}]; // dữ liệu số 2: là cần loop qua để được thành kiểu dữ liệu đầu tiên.\n\nconst Body = () => {\n  return /*#__PURE__*/_jsxDEV(LineChart, {\n    width: 900,\n    height: 600,\n    data: data,\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n      label: {\n        value: \"Số lượng điểm\",\n        angle: -90,\n        position: \"insideLeft\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      type: \"monotone\",\n      dataKey: \"\\u0110I\\u1EC2M\",\n      stroke: \"#8884d8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["D:/PTIT/Ky2Nam4/QLSV/frontend/src/components/admin/thongke/Body.js"],"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Legend","data","name","ĐIỂM","Body","value","angle","position"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,aAAxC,EAAuDC,MAAvD,QAAqE,UAArE,C,CAEA;;;AAEA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CADW,EAEX;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAFW,EAGX;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAHW,EAIX;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAJW,EAKX;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CALW,EAMX;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CANW,EAOX;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAPW,EAQX;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CARW,EASX;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CATW,EAUX;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAVW,EAWX;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,IAAI,EAAE;AAAzB,CAXW,CAAb,C,CAcA;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,EAAE,GAAlB;AAAuB,IAAA,MAAM,EAAE,GAA/B;AAAoC,IAAA,IAAI,EAAEH,IAA1C;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AACE,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE,eAAT;AAA0BC,QAAAA,KAAK,EAAE,CAAC,EAAlC;AAAsCC,QAAAA,QAAQ,EAAE;AAAhD;AADT;AAAA;AAAA;AAAA;AAAA,YAHF,eAME,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,gBAA9B;AAAqC,MAAA,MAAM,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZD;;KAAMH,I;AAaN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Legend } from \"recharts\";\r\n\r\n// dữ liệu số 1: là dữ kiệu nạp vô biểu đồ để vẽ được liền\r\n\r\nconst data = [\r\n  { name: \"Điểm 0\", ĐIỂM: 2 },\r\n  { name: \"Điểm 1\", ĐIỂM: 6 },\r\n  { name: \"Điểm 2\", ĐIỂM: 3 },\r\n  { name: \"Điểm 3\", ĐIỂM: 8 },\r\n  { name: \"Điểm 4\", ĐIỂM: 4 },\r\n  { name: \"Điểm 5\", ĐIỂM: 8 },\r\n  { name: \"Điểm 6\", ĐIỂM: 8 },\r\n  { name: \"Điểm 7\", ĐIỂM: 20 },\r\n  { name: \"Điểm 8\", ĐIỂM: 8 },\r\n  { name: \"Điểm 9\", ĐIỂM: 3 },\r\n  { name: \"Điểm 10\", ĐIỂM: 10 },\r\n];\r\n\r\n// dữ liệu số 2: là cần loop qua để được thành kiểu dữ liệu đầu tiên.\r\n\r\nconst Body = () => {\r\n  return (\r\n    <LineChart width={900} height={600} data={data}>\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"name\" />\r\n      <YAxis\r\n        label={{ value: \"Số lượng điểm\", angle: -90, position: \"insideLeft\" }}\r\n      />\r\n      <Legend />\r\n      <Line type=\"monotone\" dataKey=\"ĐIỂM\" stroke=\"#8884d8\" />\r\n    </LineChart>\r\n  );\r\n};\r\nexport default Body;\r\n"]},"metadata":{},"sourceType":"module"}