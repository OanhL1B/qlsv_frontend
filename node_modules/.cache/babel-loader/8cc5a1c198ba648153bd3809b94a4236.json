{"ast":null,"code":"import { SET_ERRORS, FACULTY_LOGIN, UPDATE_PASSWORD, UPDATE_FACULTY, ADD_TEST, GET_TEST, GET_STUDENT, MARKS_UPLOADED, ATTENDANCE_MARKED } from \"../actionTypes\";\nimport * as api from \"../api\";\nexport const facultySignIn = (formData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.facultySignIn(formData);\n    dispatch({\n      type: FACULTY_LOGIN,\n      data\n    });\n    if (data.result.passwordUpdated) navigate(\"/faculty/home\");else navigate(\"/faculty/password\");\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const facultyUpdatePassword = (formData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.facultyUpdatePassword(formData);\n    dispatch({\n      type: UPDATE_PASSWORD,\n      payload: true\n    });\n    alert(\"Password Updated\");\n    navigate(\"/faculty/home\");\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const updateFaculty = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateFaculty(formData);\n    dispatch({\n      type: UPDATE_FACULTY,\n      payload: true\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const createTest = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createTest(formData);\n    alert(\"Test Created Successfully\");\n    dispatch({\n      type: ADD_TEST,\n      payload: true\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getTest = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getTest(formData);\n    dispatch({\n      type: GET_TEST,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getStudent = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getMarksStudent(formData);\n    dispatch({\n      type: GET_STUDENT,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const uploadMark = (marks, department, section, year, test) => async dispatch => {\n  try {\n    const formData = {\n      marks,\n      department,\n      section,\n      year,\n      test\n    };\n    const {\n      data\n    } = await api.uploadMarks(formData);\n    alert(\"Marks Uploaded Successfully\");\n    dispatch({\n      type: MARKS_UPLOADED,\n      payload: true\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const markAttendance = (checkedValue, subjectName, department, year, section) => async dispatch => {\n  try {\n    const formData = {\n      selectedStudents: checkedValue,\n      subjectName,\n      department,\n      year,\n      section\n    };\n    const {\n      data\n    } = await api.markAttendance(formData);\n    alert(\"Attendance Marked Successfully\");\n    dispatch({\n      type: ATTENDANCE_MARKED,\n      payload: true\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/HongOanh/OneDrive/Desktop/College-Erp/client/src/redux/actions/facultyActions.js"],"names":["SET_ERRORS","FACULTY_LOGIN","UPDATE_PASSWORD","UPDATE_FACULTY","ADD_TEST","GET_TEST","GET_STUDENT","MARKS_UPLOADED","ATTENDANCE_MARKED","api","facultySignIn","formData","navigate","dispatch","data","type","result","passwordUpdated","error","payload","response","facultyUpdatePassword","alert","updateFaculty","createTest","getTest","getStudent","getMarksStudent","uploadMark","marks","department","section","year","test","uploadMarks","markAttendance","checkedValue","subjectName","selectedStudents"],"mappings":"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","sourcesContent":["import {\r\n  SET_ERRORS,\r\n  FACULTY_LOGIN,\r\n  UPDATE_PASSWORD,\r\n  UPDATE_FACULTY,\r\n  ADD_TEST,\r\n  GET_TEST,\r\n  GET_STUDENT,\r\n  MARKS_UPLOADED,\r\n  ATTENDANCE_MARKED,\r\n} from \"../actionTypes\";\r\nimport * as api from \"../api\";\r\n\r\nexport const facultySignIn = (formData, navigate) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.facultySignIn(formData);\r\n    dispatch({ type: FACULTY_LOGIN, data });\r\n    if (data.result.passwordUpdated) navigate(\"/faculty/home\");\r\n    else navigate(\"/faculty/password\");\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const facultyUpdatePassword =\r\n  (formData, navigate) => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.facultyUpdatePassword(formData);\r\n      dispatch({ type: UPDATE_PASSWORD, payload: true });\r\n      alert(\"Password Updated\");\r\n      navigate(\"/faculty/home\");\r\n    } catch (error) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    }\r\n  };\r\n\r\nexport const updateFaculty = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateFaculty(formData);\r\n    dispatch({ type: UPDATE_FACULTY, payload: true });\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const createTest = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createTest(formData);\r\n    alert(\"Test Created Successfully\");\r\n\r\n    dispatch({ type: ADD_TEST, payload: true });\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const getTest = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getTest(formData);\r\n    dispatch({ type: GET_TEST, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const getStudent = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getMarksStudent(formData);\r\n    dispatch({ type: GET_STUDENT, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const uploadMark =\r\n  (marks, department, section, year, test) => async (dispatch) => {\r\n    try {\r\n      const formData = {\r\n        marks,\r\n        department,\r\n        section,\r\n        year,\r\n        test,\r\n      };\r\n      const { data } = await api.uploadMarks(formData);\r\n      alert(\"Marks Uploaded Successfully\");\r\n      dispatch({ type: MARKS_UPLOADED, payload: true });\r\n    } catch (error) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    }\r\n  };\r\n\r\nexport const markAttendance =\r\n  (checkedValue, subjectName, department, year, section) =>\r\n  async (dispatch) => {\r\n    try {\r\n      const formData = {\r\n        selectedStudents: checkedValue,\r\n        subjectName,\r\n        department,\r\n        year,\r\n        section,\r\n      };\r\n      const { data } = await api.markAttendance(formData);\r\n      alert(\"Attendance Marked Successfully\");\r\n      dispatch({ type: ATTENDANCE_MARKED, payload: true });\r\n    } catch (error) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}