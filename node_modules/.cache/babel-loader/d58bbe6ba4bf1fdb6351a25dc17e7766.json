{"ast":null,"code":"var _jsxFileName = \"D:\\\\PTIT\\\\Ky2Nam4\\\\QLSV\\\\frontend\\\\src\\\\components\\\\login\\\\Login.js\",\n    _s = $RefreshSig$();\n\n// import VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\n// import VisibilityIcon from \"@mui/icons-material/Visibility\";\n// import Spinner from \"../../utils/Spinner\";\n// import React, { useEffect, useState } from \"react\";\n// import { userLogin } from \"../../redux/actions/loginActions\";\n// import { useNavigate } from \"react-router\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import * as yup from \"yup\";\n// import { yupResolver } from \"@hookform/resolvers/yup\";\n// import { Controller, useForm } from \"react-hook-form\";\n// const Login = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const store = useSelector((state) => state);\n//   const [error, setError] = useState({});\n//   // form validation\n//   const schema = yup\n//     .object({\n//       username: yup.string().required(\"This field is required\"),\n//       password: yup\n//         .string()\n//         .required(\"This field is required\")\n//         .min(8, \"Password must be 8 character\"),\n//     })\n//     .required();\n//   const {\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm({\n//     resolver: yupResolver(schema),\n//     mode: \"onSubmit\",\n//     defaultValues: {\n//       username: \"\",\n//       password: \"\",\n//     },\n//     reValidateMode: \"onChange\",\n//   });\n//   useEffect(() => {\n//     if (store.errors) {\n//       setError(store.errors);\n//     }\n//   }, [store.errors]);\n//   const login = (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     dispatch(userLogin({ username: username, password: password }, navigate));\n//   };\n//   useEffect(() => {\n//     if (store.errors) {\n//       setLoading(false);\n//       setUsername(\"\");\n//       setPassword(\"\");\n//     }\n//   }, [store.errors]);\n//   return (\n//     <div className=\"flex items-center justify-center h-screen bg-white\">\n//       <div>\n//         <form\n//           onSubmit={handleSubmit(login)}\n//           className={`${\n//             loading ? \"h-[27rem]\" : \"h-96\"\n//           } w-96 bg-white flex flex-col items-center justify-center duration-1000  space-y-6 rounded-3xl shadow-2xl`}\n//         >\n//           <h1 className=\"text-3xl font-semibold text-gray-800\">Đăng Nhập</h1>\n//           <div className=\"space-y-1\">\n//             <label className=\"block text-sm font-semibold text-gray-800\">\n//               Username\n//             </label>\n//             <div className=\"bg-white rounded-lg w-[16rem] flex  items-center\">\n//               <input\n//                 onChange={(e) => setUsername(e.target.value)}\n//                 value={username}\n//                 name=\"username\"\n//                 type=\"text\"\n//                 required\n//                 className=\"block w-full px-4 py-2 mt-2 text-black bg-white border rounded-lg placeholder:text-sm focus:border-green-400 focus:ring-green-300 focus:outline-none focus:ring focus:ring-opacity-40\"\n//                 placeholder=\"Enter your username\"\n//                 error={errors.username?.message}\n//               />\n//             </div>\n//           </div>\n//           <div className=\"space-y-1\">\n//             <label\n//               htmlFor=\"password\"\n//               className=\"block text-sm font-semibold text-gray-800\"\n//             >\n//               Password\n//             </label>\n//             <div className=\"bg-white rounded-lg w-[16rem] flex  items-center\">\n//               <input\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 value={password}\n//                 required\n//                 name=\"password\"\n//                 type={showPassword ? \"text\" : \"password\"}\n//                 className=\"relative block w-full px-4 py-2 mt-2 text-black bg-white border rounded-lg placeholder:text-sm focus:border-green-400 focus:ring-green-300 focus:outline-none focus:ring focus:ring-opacity-40\"\n//                 placeholder=\"Enter your password\"\n//                 error={errors.password?.message}\n//               />\n//               <div className=\"absolute ml-[224px] mt-2\">\n//                 {showPassword ? (\n//                   <VisibilityIcon\n//                     onClick={() => setShowPassword(!showPassword)}\n//                     className=\"cursor-pointer\"\n//                   />\n//                 ) : (\n//                   <VisibilityOffIcon\n//                     onClick={() => setShowPassword(!showPassword)}\n//                     className=\"cursor-pointer\"\n//                   />\n//                 )}\n//               </div>\n//             </div>\n//           </div>\n//           <button\n//             type=\"submit\"\n//             className=\"flex items-center justify-center w-32 py-1 text-base text-white duration-150 rounded-lg hover:scale-105 bg-primary \"\n//           >\n//             Login\n//           </button>\n//           {loading && (\n//             <Spinner\n//               message=\"Logging In\"\n//               height={30}\n//               width={150}\n//               color=\"#ffffff\"\n//               messageColor=\"#fff\"\n//             />\n//           )}\n//           {error.message ? (\n//             <p className=\"text-red-500\">{error.message}</p>\n//           ) : null}\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Login;\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport Spinner from \"../../utils/Spinner\";\nimport React, { useEffect, useState } from \"react\";\nimport { userLogin } from \"../../redux/actions/loginActions\";\nimport { useNavigate } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Input from \"../util/Input\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  username: yup.string().required(\"This field is reduired\"),\n  password: yup.string().required(\"This field is required\").min(8, \"Password must be 8 character\")\n}).required();\n\nconst Login = () => {\n  _s();\n\n  var _errors$username, _errors$password;\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const store = useSelector(state => state);\n  const [error, setError] = useState({}); // form validation\n\n  const {\n    handleSubmit,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm({\n    // bắt lỗi\n    // resolver các giá trị đầu vào theo schema đã định nghĩa\n    resolver: yupResolver(schema),\n    // để mode để khi nào submit thì nó mới bắt lỗi nè\n    mode: \"onSubmit\"\n  });\n  useEffect(() => {\n    if (store.errors) {\n      setError(store.errors);\n    }\n  }, [store.errors]);\n\n  const login = e => {\n    e.preventDefault();\n    setLoading(true);\n    dispatch(userLogin({\n      username: username,\n      password: password\n    }, navigate));\n  };\n\n  useEffect(() => {\n    if (store.errors) {\n      setLoading(false);\n      setUsername(\"\");\n      setPassword(\"\");\n    }\n  }, [store.errors]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center h-screen bg-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(login),\n        className: `${loading ? \"h-[27rem]\" : \"h-96\"} w-96 bg-white flex flex-col items-center justify-center duration-1000  space-y-6 rounded-3xl shadow-2xl`,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-semibold text-gray-800\",\n          children: \"\\u0110\\u0103ng Nh\\u1EADp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-semibold text-gray-800\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg w-[16rem] flex  items-center\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              control: control,\n              onChange: e => setUsername(e.target.value),\n              value: username,\n              name: \"username\",\n              type: \"text\",\n              required: true,\n              className: \"block w-full px-4 py-2 mt-2 text-black bg-white border rounded-lg placeholder:text-sm focus:border-green-400 focus:ring-green-300 focus:outline-none focus:ring focus:ring-opacity-40\",\n              placeholder: \"Enter your username\",\n              error: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"block text-sm font-semibold text-gray-800\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg w-[16rem] flex  items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              control: control,\n              onChange: e => setPassword(e.target.value),\n              value: password,\n              required: true,\n              name: \"password\",\n              type: showPassword ? \"text\" : \"password\",\n              className: \"relative block w-full px-4 py-2 mt-2 text-black bg-white border rounded-lg placeholder:text-sm focus:border-green-400 focus:ring-green-300 focus:outline-none focus:ring focus:ring-opacity-40\",\n              placeholder: \"Enter your password\",\n              error: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute ml-[224px] mt-2\",\n              children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n                onClick: () => setShowPassword(!showPassword),\n                className: \"cursor-pointer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {\n                onClick: () => setShowPassword(!showPassword),\n                className: \"cursor-pointer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"flex items-center justify-center w-32 py-1 text-base text-white duration-150 rounded-lg hover:scale-105 bg-primary \",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {\n          message: \"Logging In\",\n          height: 30,\n          width: 150,\n          color: \"#ffffff\",\n          messageColor: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), error.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500\",\n          children: error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"irHwKppOFyqnEE+zcoQciQKq4tA=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/PTIT/Ky2Nam4/QLSV/frontend/src/components/login/Login.js"],"names":["VisibilityOffIcon","VisibilityIcon","Spinner","React","useEffect","useState","userLogin","useNavigate","useDispatch","useSelector","yup","yupResolver","Input","useForm","schema","object","username","string","required","password","min","Login","setUsername","setPassword","showPassword","setShowPassword","loading","setLoading","dispatch","navigate","store","state","error","setError","handleSubmit","control","formState","errors","resolver","mode","login","e","preventDefault","target","value","message"],"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","sourcesContent":["// import VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\n// import VisibilityIcon from \"@mui/icons-material/Visibility\";\r\n// import Spinner from \"../../utils/Spinner\";\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { userLogin } from \"../../redux/actions/loginActions\";\r\n// import { useNavigate } from \"react-router\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import * as yup from \"yup\";\r\n// import { yupResolver } from \"@hookform/resolvers/yup\";\r\n// import { Controller, useForm } from \"react-hook-form\";\r\n// const Login = () => {\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [showPassword, setShowPassword] = useState(false);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const dispatch = useDispatch();\r\n//   const navigate = useNavigate();\r\n//   const store = useSelector((state) => state);\r\n//   const [error, setError] = useState({});\r\n\r\n//   // form validation\r\n\r\n//   const schema = yup\r\n//     .object({\r\n//       username: yup.string().required(\"This field is required\"),\r\n//       password: yup\r\n//         .string()\r\n//         .required(\"This field is required\")\r\n//         .min(8, \"Password must be 8 character\"),\r\n//     })\r\n//     .required();\r\n\r\n//   const {\r\n//     handleSubmit,\r\n//     formState: { errors },\r\n//   } = useForm({\r\n//     resolver: yupResolver(schema),\r\n//     mode: \"onSubmit\",\r\n//     defaultValues: {\r\n//       username: \"\",\r\n//       password: \"\",\r\n//     },\r\n//     reValidateMode: \"onChange\",\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     if (store.errors) {\r\n//       setError(store.errors);\r\n//     }\r\n//   }, [store.errors]);\r\n\r\n//   const login = (e) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     dispatch(userLogin({ username: username, password: password }, navigate));\r\n//   };\r\n//   useEffect(() => {\r\n//     if (store.errors) {\r\n//       setLoading(false);\r\n//       setUsername(\"\");\r\n//       setPassword(\"\");\r\n//     }\r\n//   }, [store.errors]);\r\n\r\n//   return (\r\n//     <div className=\"flex items-center justify-center h-screen bg-white\">\r\n//       <div>\r\n//         <form\r\n//           onSubmit={handleSubmit(login)}\r\n//           className={`${\r\n//             loading ? \"h-[27rem]\" : \"h-96\"\r\n//           } w-96 bg-white flex flex-col items-center justify-center duration-1000  space-y-6 rounded-3xl shadow-2xl`}\r\n//         >\r\n//           <h1 className=\"text-3xl font-semibold text-gray-800\">Đăng Nhập</h1>\r\n\r\n//           <div className=\"space-y-1\">\r\n//             <label className=\"block text-sm font-semibold text-gray-800\">\r\n//               Username\r\n//             </label>\r\n//             <div className=\"bg-white rounded-lg w-[16rem] flex  items-center\">\r\n//               <input\r\n//                 onChange={(e) => setUsername(e.target.value)}\r\n//                 value={username}\r\n//                 name=\"username\"\r\n//                 type=\"text\"\r\n//                 required\r\n//                 className=\"block w-full px-4 py-2 mt-2 text-black bg-white border rounded-lg placeholder:text-sm focus:border-green-400 focus:ring-green-300 focus:outline-none focus:ring focus:ring-opacity-40\"\r\n//                 placeholder=\"Enter your username\"\r\n//                 error={errors.username?.message}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"space-y-1\">\r\n//             <label\r\n//               htmlFor=\"password\"\r\n//               className=\"block text-sm font-semibold text-gray-800\"\r\n//             >\r\n//               Password\r\n//             </label>\r\n\r\n//             <div className=\"bg-white rounded-lg w-[16rem] flex  items-center\">\r\n//               <input\r\n//                 onChange={(e) => setPassword(e.target.value)}\r\n//                 value={password}\r\n//                 required\r\n//                 name=\"password\"\r\n//                 type={showPassword ? \"text\" : \"password\"}\r\n//                 className=\"relative block w-full px-4 py-2 mt-2 text-black bg-white border rounded-lg placeholder:text-sm focus:border-green-400 focus:ring-green-300 focus:outline-none focus:ring focus:ring-opacity-40\"\r\n//                 placeholder=\"Enter your password\"\r\n//                 error={errors.password?.message}\r\n//               />\r\n//               <div className=\"absolute ml-[224px] mt-2\">\r\n//                 {showPassword ? (\r\n//                   <VisibilityIcon\r\n//                     onClick={() => setShowPassword(!showPassword)}\r\n//                     className=\"cursor-pointer\"\r\n//                   />\r\n//                 ) : (\r\n//                   <VisibilityOffIcon\r\n//                     onClick={() => setShowPassword(!showPassword)}\r\n//                     className=\"cursor-pointer\"\r\n//                   />\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"flex items-center justify-center w-32 py-1 text-base text-white duration-150 rounded-lg hover:scale-105 bg-primary \"\r\n//           >\r\n//             Login\r\n//           </button>\r\n//           {loading && (\r\n//             <Spinner\r\n//               message=\"Logging In\"\r\n//               height={30}\r\n//               width={150}\r\n//               color=\"#ffffff\"\r\n//               messageColor=\"#fff\"\r\n//             />\r\n//           )}\r\n//           {error.message ? (\r\n//             <p className=\"text-red-500\">{error.message}</p>\r\n//           ) : null}\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport Spinner from \"../../utils/Spinner\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { userLogin } from \"../../redux/actions/loginActions\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport Input from \"../util/Input\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst schema = yup\r\n  .object({\r\n    username: yup.string().required(\"This field is reduired\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"This field is required\")\r\n      .min(8, \"Password must be 8 character\"),\r\n  })\r\n  .required();\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const store = useSelector((state) => state);\r\n  const [error, setError] = useState({});\r\n\r\n  // form validation\r\n\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm({\r\n    // bắt lỗi\r\n    // resolver các giá trị đầu vào theo schema đã định nghĩa\r\n    resolver: yupResolver(schema),\r\n    // để mode để khi nào submit thì nó mới bắt lỗi nè\r\n    mode: \"onSubmit\",\r\n  });\r\n  useEffect(() => {\r\n    if (store.errors) {\r\n      setError(store.errors);\r\n    }\r\n  }, [store.errors]);\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    dispatch(userLogin({ username: username, password: password }, navigate));\r\n  };\r\n  useEffect(() => {\r\n    if (store.errors) {\r\n      setLoading(false);\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n    }\r\n  }, [store.errors]);\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center h-screen bg-white\">\r\n      <div>\r\n        <form\r\n          onSubmit={handleSubmit(login)}\r\n          className={`${\r\n            loading ? \"h-[27rem]\" : \"h-96\"\r\n          } w-96 bg-white flex flex-col items-center justify-center duration-1000  space-y-6 rounded-3xl shadow-2xl`}\r\n        >\r\n          <h1 className=\"text-3xl font-semibold text-gray-800\">Đăng Nhập</h1>\r\n\r\n          <div className=\"space-y-1\">\r\n            <label className=\"block text-sm font-semibold text-gray-800\">\r\n              Username\r\n            </label>\r\n            <div className=\"bg-white rounded-lg w-[16rem] flex  items-center\">\r\n              <Input\r\n                control={control}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                value={username}\r\n                name=\"username\"\r\n                type=\"text\"\r\n                required\r\n                className=\"block w-full px-4 py-2 mt-2 text-black bg-white border rounded-lg placeholder:text-sm focus:border-green-400 focus:ring-green-300 focus:outline-none focus:ring focus:ring-opacity-40\"\r\n                placeholder=\"Enter your username\"\r\n                error={errors.username?.message}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-1\">\r\n            <label\r\n              htmlFor=\"password\"\r\n              className=\"block text-sm font-semibold text-gray-800\"\r\n            >\r\n              Password\r\n            </label>\r\n\r\n            <div className=\"bg-white rounded-lg w-[16rem] flex  items-center\">\r\n              <Input\r\n                control={control}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                value={password}\r\n                required\r\n                name=\"password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                className=\"relative block w-full px-4 py-2 mt-2 text-black bg-white border rounded-lg placeholder:text-sm focus:border-green-400 focus:ring-green-300 focus:outline-none focus:ring focus:ring-opacity-40\"\r\n                placeholder=\"Enter your password\"\r\n                error={errors.password?.message}\r\n              />\r\n              <div className=\"absolute ml-[224px] mt-2\">\r\n                {showPassword ? (\r\n                  <VisibilityIcon\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    className=\"cursor-pointer\"\r\n                  />\r\n                ) : (\r\n                  <VisibilityOffIcon\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    className=\"cursor-pointer\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"flex items-center justify-center w-32 py-1 text-base text-white duration-150 rounded-lg hover:scale-105 bg-primary \"\r\n          >\r\n            Login\r\n          </button>\r\n          {loading && (\r\n            <Spinner\r\n              message=\"Logging In\"\r\n              height={30}\r\n              width={150}\r\n              color=\"#ffffff\"\r\n              messageColor=\"#fff\"\r\n            />\r\n          )}\r\n          {error.message ? (\r\n            <p className=\"text-red-500\">{error.message}</p>\r\n          ) : null}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}