{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { ADD_COURSE_DETAIL, ADD_COURSE, ADD_DEPARTMENT, ADD_STUDENT, ADD_SUBJECT, ADD_TEACHER, ADD_UNIT, DELETE_COURSE, DELETE_DEPARTMENT, DELETE_STUDENT, DELETE_SUBJECT, DELETE_TEACHER, DELETE_UNIT, GET_ALL_COURSE_DETAIL, GET_ALL_COURSE, GET_ALL_DEPARTMENT, GET_ALL_STUDENT, GET_ALL_SUBJECT, GET_ALL_TEACHER, GET_ALL_UNIT, GET_COURSE_UNIT, GET_SCORE_COURSE, GET_STUDENT_BY_ID, GET_STUDENT_UNIT, GET_TEACHER_DEPARTMENT, GET_UNIT_DEPARTMENT, SET_ERRORS, UPDATE_COURSE, UPDATE_DEPARTMENT, UPDATE_STUDENT, UPDATE_SUBJECT, UPDATE_TEACHER, UPDATE_UNIT, UPDATE_SCORE, DELETE_DANGKYMON, UPDATE_PASSWORD, TEACHER_UPW, STUDENT_UPW, GET_SUBJECT_DEPARTMENT, GET_COURSE_BY_KEHOACHNAM, GET_THONGKE_BY_SOMETHING, GET_COURSE_BY_SOMETHING, GET_ALL_COURSE_BY_MKH, GET_ALL_COURSE_BY_UNIMKH, GET_COURSEDETAIL_COURSE, UPDATE_COURSEDETAIL, DELETE_COURSEDETAIL, GET_ALL_KHN } from \"../actionTypes\";\nimport * as api from \"../api\"; //getAll\n\nexport const getAllDepartment = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllDepartment();\n    dispatch({\n      type: GET_ALL_DEPARTMENT,\n      payload: data.retObj[0]\n    });\n  } catch (error) {\n    console.log(\"Redux Error\", error);\n  }\n};\nexport const getAllTeacher = redata => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllTeacher(redata);\n    dispatch({\n      type: GET_ALL_TEACHER,\n      payload: data.retObj[0]\n    });\n  } catch (error) {\n    console.log(\"Redux Error\", error);\n  }\n};\nexport const getAllUnit = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllUnit();\n    dispatch({\n      type: GET_ALL_UNIT,\n      payload: data.retObj[0]\n    });\n  } catch (error) {\n    console.log(\"Redux Error\", error);\n  }\n};\nexport const getAllSubject = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllSubject();\n    dispatch({\n      type: GET_ALL_SUBJECT,\n      payload: data.retObj[0]\n    });\n  } catch (error) {\n    console.log(\"Redux Error\", error);\n  }\n};\nexport const getAllStudent = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllStudent();\n    dispatch({\n      type: GET_ALL_STUDENT,\n      payload: data.retObj[0]\n    });\n  } catch (error) {\n    console.log(\"Redux Error\", error);\n  }\n};\nexport const getAllCourse = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllCourse();\n    dispatch({\n      type: GET_ALL_COURSE,\n      payload: data.retObj[0]\n    });\n  } catch (error) {\n    console.log(\"Redux Error\", error);\n  }\n};\nexport const getAllCourseDetail = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllCourseDetail();\n    dispatch({\n      type: GET_ALL_COURSE_DETAIL,\n      payload: data.retObj[0]\n    });\n  } catch (error) {\n    console.log(\"Redux Error\", error);\n  }\n};\nexport const getAllKHN = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllKHN();\n    dispatch({\n      type: GET_ALL_KHN,\n      payload: data.retObj[0]\n    });\n  } catch (error) {\n    console.log(\"Redux Error\", error);\n  }\n}; // Add\n\nexport const addDepartment = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addDepartment(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Thêm khoa mới thành công!\");\n      dispatch({\n        type: ADD_DEPARTMENT,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.status === \"error\") {\n      dispatch({\n        type: SET_ERRORS,\n        payload: error.response.data\n      });\n    } else {\n      console.log(\"Unknown error occurred\");\n    }\n  }\n};\nexport const addTeacher = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addTeacher(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Thêm giảng viên mới thành công!\");\n      dispatch({\n        type: ADD_TEACHER,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.status === \"error\") {\n      dispatch({\n        type: SET_ERRORS,\n        payload: error.response.data\n      });\n    } else {\n      console.log(\"Unknown error occurred\");\n    }\n  }\n};\nexport const addUnit = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addUnit(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Thêm lớp học mới thành công!\");\n      dispatch({\n        type: ADD_UNIT,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.status === \"error\") {\n      dispatch({\n        type: SET_ERRORS,\n        payload: error.response.data\n      });\n    } else {\n      console.log(\"Unknown error occurred\");\n    }\n  }\n};\nexport const addStudent = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addStudent(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Thêm sinh viên mới thành công!\");\n      dispatch({\n        type: ADD_STUDENT,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.status === \"error\") {\n      dispatch({\n        type: SET_ERRORS,\n        payload: error.response.data\n      });\n    } else {\n      console.log(\"Unknown error occurred\");\n    }\n  }\n};\nexport const addSubject = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addSubject(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Thêm môn học mới thành công!\");\n      dispatch({\n        type: ADD_SUBJECT,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.status === \"error\") {\n      dispatch({\n        type: SET_ERRORS,\n        payload: error.response.data\n      });\n    } else {\n      console.log(\"Unknown error occurred\");\n    }\n  }\n};\nexport const addCourse = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addCourse(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Thêm lớp tín chỉ mới thành công!\");\n      dispatch({\n        type: ADD_COURSE,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.status === \"error\") {\n      dispatch({\n        type: SET_ERRORS,\n        payload: error.response.data\n      });\n    } else {\n      console.log(\"Unknown error occurred\");\n    }\n  }\n};\nexport const addCourseDetail = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addCourseDetail(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Thêm chi tiết lớp tín chỉ mới thành công!\");\n      dispatch({\n        type: ADD_COURSE_DETAIL,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.status === \"error\") {\n      dispatch({\n        type: SET_ERRORS,\n        payload: error.response.data\n      });\n    } else {\n      console.log(\"Unknown error occurred\");\n    }\n  }\n}; //update\n\nexport const updateDepartment = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateDepartment(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Chỉnh sửa Khoa thành công!\");\n      dispatch({\n        type: UPDATE_DEPARTMENT,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const updateUnit = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateUnit(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Chỉnh sửa lớp học thành công!\");\n      dispatch({\n        type: UPDATE_UNIT,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const updateSubject = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateSubject(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Chỉnh sửa môn học thành công!\");\n      dispatch({\n        type: UPDATE_SUBJECT,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const updateStudent = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateStudent(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Chỉnh sửa sinh viên thành công!\");\n      dispatch({\n        type: UPDATE_STUDENT,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const updateTeacher = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateTeacher(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Chỉnh sửa giảng viên thành công!\");\n      dispatch({\n        type: UPDATE_TEACHER,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const updateCourse = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateCourse(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Chỉnh sửa lớp tín chỉ thành công!\");\n      dispatch({\n        type: UPDATE_COURSE,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const updateCourseDetail = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateCourseDetail(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Chỉnh sửa chi tiết lớp tín chỉ thành công!\");\n      dispatch({\n        type: UPDATE_COURSEDETAIL,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const updateScore = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateScore(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Chỉnh sửa điểm thành công!\");\n      dispatch({\n        type: UPDATE_SCORE,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const updatePassword = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePassword(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Đổi mật khẩu thành công!\");\n      dispatch({\n        type: UPDATE_PASSWORD,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n      toast.error(\"Đổi mật khẩu không thành công!\");\n    }\n  } catch (error) {\n    console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const teacherUpw = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.teacherUpw(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Đối mật khẩu thành công!\");\n      dispatch({\n        type: TEACHER_UPW,\n        payload: true\n      });\n    } else {\n      console.log(\"vô đây\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n      toast.error(\"Đổi mật khẩu méo thành không!\");\n    }\n  } catch (error) {\n    console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const studentUpw = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.studentUpw(formData);\n\n    if (data.status === \"success\") {\n      toast.success(\"Đối mật khẩu thành công!\");\n      dispatch({\n        type: STUDENT_UPW,\n        payload: true\n      });\n    } else {\n      console.log(\"vô đây\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: data\n      });\n      toast.error(\"Đổi mật khẩu méo thành không!\");\n    }\n  } catch (error) {\n    console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n}; // delete\n\nexport const deleteDepartment = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteDepartment(formData);\n\n    if (data.status === \"success\" && data.retObj.length > 0) {\n      toast.success(\"Xóa khoa thành công!\");\n      dispatch({\n        type: DELETE_DEPARTMENT,\n        payload: true\n      });\n    } else {\n      toast.error(\"Xóa Khoa này không thành không!\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: \"Xóa Khoa không Thành công\"\n      });\n    }\n  } catch (error) {\n    // console.log(\"vô đây nè\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: \"Xóa Khoa không Thành công\"\n    });\n  }\n};\nexport const deleteUnit = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteUnit(formData);\n\n    if (data.status === \"success\" && data.retObj.length > 0) {\n      toast.success(\"Xóa lớp học thành công!\");\n      dispatch({\n        type: DELETE_UNIT,\n        payload: true\n      });\n    } else {\n      toast.error(\"Xóa Lớp này không thành không!\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: \"Xóa lớp không thành công\"\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const deleteStudent = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteStudent(formData);\n\n    if (data.status === \"success\" && data.retObj.length > 0) {\n      toast.success(\"Xóa sinh viên thành công!\");\n      dispatch({\n        type: DELETE_STUDENT,\n        payload: true\n      });\n    } else {\n      toast.error(\"Xóa sinh viên này không thành không!\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: \"Xóa sinh viên không thành công\"\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: \"Xóa sinh viên không Thành công\"\n    });\n  }\n};\nexport const deleteTeacher = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteTeacher(formData);\n\n    if (data.status === \"success\" && data.retObj.length > 0) {\n      toast.success(\"Xóa giảng viên thành công!\");\n      dispatch({\n        type: DELETE_TEACHER,\n        payload: true\n      });\n    } else {\n      toast.error(\"Xóa giảng viên này không thành không!\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: \"Xóa giảng viên không thành công\"\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: \"Xóa giảng viên không Thành công\"\n    });\n  }\n};\nexport const deleteCourse = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteCourse(formData);\n\n    if (data.status === \"success\" && data.retObj.length > 0) {\n      toast.success(\"Xóa lớp tín chỉ thành công!\");\n      dispatch({\n        type: DELETE_COURSE,\n        payload: true\n      });\n    } else {\n      toast.error(\"Xóa lớp tín chỉ này không thành không!\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: \"Xóa lớp tín chỉ không thành công\"\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: \"Xóa lớp tín chỉ không Thành công\"\n    });\n  }\n};\nexport const deleteCourseDetail = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteCourseDetail(formData);\n\n    if (data.status === \"success\" && data.retObj.length > 0) {\n      toast.success(\"Xóa chi tiết lớp tín chỉ thành công!\");\n      dispatch({\n        type: DELETE_COURSEDETAIL,\n        payload: true\n      });\n    } else {\n      toast.error(\"Xóa chi tiết lớp tín chỉ này không thành không!\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: \"Xóa chi tiết lớp tín chỉ không thành công\"\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: \"Xóa chi tiết lớp tín chỉ không Thành công\"\n    });\n  }\n};\nexport const deleteSubject = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteSubject(formData);\n\n    if (data.status === \"success\" && data.retObj.length > 0) {\n      toast.success(\"Xóa môn học thành công!\");\n      dispatch({\n        type: DELETE_SUBJECT,\n        payload: true\n      });\n    } else {\n      toast.error(\"Xóa môn học này không thành không!\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: \"Xóa Môn học không thành công\"\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: \"Xóa Môn học không Thành công\"\n    });\n  }\n};\nexport const deleteDangkymon = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteDangkymon(formData);\n\n    if (data.status === \"success\" && data.retObj.length > 0) {\n      toast.success(\"Xóa điểm thành công!\");\n      dispatch({\n        type: DELETE_DANGKYMON,\n        payload: true\n      });\n    } else {\n      toast.error(\"Xóa điểm không thành công!\");\n      dispatch({\n        type: SET_ERRORS,\n        payload: \"Xóa điểm không thành công\"\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: \"Xóa điểm không Thành công\"\n    });\n  }\n}; // get...bysomething\n\nexport const getTeacherDepartment = (department, page) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getTeacherDepartment(department, page);\n    dispatch({\n      type: GET_TEACHER_DEPARTMENT,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getStudentUnit = (unit, page) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getStudentUnit(unit, page);\n    dispatch({\n      type: GET_STUDENT_UNIT,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getUnitDepartment = department => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getUnitDepartment(department);\n    dispatch({\n      type: GET_UNIT_DEPARTMENT,\n      payload: data\n    });\n  } catch (error) {\n    // console.log(\"error.response.data\", error.response.data);\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getCourseUnit = unit => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getCourseUnit(unit);\n    dispatch({\n      type: GET_COURSE_UNIT,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getScoreCourse = course => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getScoreCourse(course);\n    dispatch({\n      type: GET_SCORE_COURSE,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getSubjectDepartment = (department, page) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getSubjectDepartment(department, page);\n    dispatch({\n      type: GET_SUBJECT_DEPARTMENT,\n      payload: data\n    });\n  } catch (error) {\n    // console.log(\"error.response.data\", error.response.data);\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n}; //\n\nexport const getAllCoursebyUnitMKH = requestData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllCoursebyUnitMKH(requestData);\n    dispatch({\n      type: GET_ALL_COURSE_BY_UNIMKH,\n      payload: data.retObj\n    });\n  } catch (error) {\n    // console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getAllCourseDetailCourse = course => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllCourseDetailCourse(course);\n    dispatch({\n      type: GET_COURSEDETAIL_COURSE,\n      payload: data.retObj\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n}; // getbyid\n\nexport const getStudentById = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getStudentById(id);\n    dispatch({\n      type: GET_STUDENT_BY_ID,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getCoursebyKeHoachNam = requestData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getCoursebyKeHoachNam(requestData);\n    console.log(\"data\", data);\n    dispatch({\n      type: GET_COURSE_BY_KEHOACHNAM,\n      payload: data.retObj\n    });\n  } catch (error) {\n    // console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getThongkebysomething = requestData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getThongkebysomething(requestData);\n    dispatch({\n      type: GET_THONGKE_BY_SOMETHING,\n      payload: data.retObj\n    });\n  } catch (error) {\n    // console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getAllCoursebysomething = requestData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllCoursebysomething(requestData);\n    dispatch({\n      type: GET_COURSE_BY_SOMETHING,\n      payload: data.retObj\n    });\n  } catch (error) {\n    // console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getAllCoursebyMKH = requestData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllCoursebyMKH(requestData);\n    dispatch({\n      type: GET_ALL_COURSE_BY_MKH,\n      payload: data.retObj\n    });\n  } catch (error) {\n    // console.log(\"vô đây\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n}; // export const clearThongkes = () => ({\n//   type: \"CLEAR_THONGKES\",\n// });","map":{"version":3,"sources":["D:/PTIT/Ky2Nam4/QLSV/frontend/src/redux/actions/adminActions.js"],"names":["toast","ADD_COURSE_DETAIL","ADD_COURSE","ADD_DEPARTMENT","ADD_STUDENT","ADD_SUBJECT","ADD_TEACHER","ADD_UNIT","DELETE_COURSE","DELETE_DEPARTMENT","DELETE_STUDENT","DELETE_SUBJECT","DELETE_TEACHER","DELETE_UNIT","GET_ALL_COURSE_DETAIL","GET_ALL_COURSE","GET_ALL_DEPARTMENT","GET_ALL_STUDENT","GET_ALL_SUBJECT","GET_ALL_TEACHER","GET_ALL_UNIT","GET_COURSE_UNIT","GET_SCORE_COURSE","GET_STUDENT_BY_ID","GET_STUDENT_UNIT","GET_TEACHER_DEPARTMENT","GET_UNIT_DEPARTMENT","SET_ERRORS","UPDATE_COURSE","UPDATE_DEPARTMENT","UPDATE_STUDENT","UPDATE_SUBJECT","UPDATE_TEACHER","UPDATE_UNIT","UPDATE_SCORE","DELETE_DANGKYMON","UPDATE_PASSWORD","TEACHER_UPW","STUDENT_UPW","GET_SUBJECT_DEPARTMENT","GET_COURSE_BY_KEHOACHNAM","GET_THONGKE_BY_SOMETHING","GET_COURSE_BY_SOMETHING","GET_ALL_COURSE_BY_MKH","GET_ALL_COURSE_BY_UNIMKH","GET_COURSEDETAIL_COURSE","UPDATE_COURSEDETAIL","DELETE_COURSEDETAIL","GET_ALL_KHN","api","getAllDepartment","dispatch","data","type","payload","retObj","error","console","log","getAllTeacher","redata","getAllUnit","getAllSubject","getAllStudent","getAllCourse","getAllCourseDetail","getAllKHN","addDepartment","formData","status","success","response","addTeacher","addUnit","addStudent","addSubject","addCourse","addCourseDetail","updateDepartment","updateUnit","updateSubject","updateStudent","updateTeacher","updateCourse","updateCourseDetail","updateScore","updatePassword","teacherUpw","studentUpw","deleteDepartment","length","deleteUnit","deleteStudent","deleteTeacher","deleteCourse","deleteCourseDetail","deleteSubject","deleteDangkymon","getTeacherDepartment","department","page","getStudentUnit","unit","getUnitDepartment","getCourseUnit","getScoreCourse","course","getSubjectDepartment","getAllCoursebyUnitMKH","requestData","getAllCourseDetailCourse","getStudentById","id","getCoursebyKeHoachNam","getThongkebysomething","getAllCoursebysomething","getAllCoursebyMKH"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport {\r\n  ADD_COURSE_DETAIL,\r\n  ADD_COURSE,\r\n  ADD_DEPARTMENT,\r\n  ADD_STUDENT,\r\n  ADD_SUBJECT,\r\n  ADD_TEACHER,\r\n  ADD_UNIT,\r\n  DELETE_COURSE,\r\n  DELETE_DEPARTMENT,\r\n  DELETE_STUDENT,\r\n  DELETE_SUBJECT,\r\n  DELETE_TEACHER,\r\n  DELETE_UNIT,\r\n  GET_ALL_COURSE_DETAIL,\r\n  GET_ALL_COURSE,\r\n  GET_ALL_DEPARTMENT,\r\n  GET_ALL_STUDENT,\r\n  GET_ALL_SUBJECT,\r\n  GET_ALL_TEACHER,\r\n  GET_ALL_UNIT,\r\n  GET_COURSE_UNIT,\r\n  GET_SCORE_COURSE,\r\n  GET_STUDENT_BY_ID,\r\n  GET_STUDENT_UNIT,\r\n  GET_TEACHER_DEPARTMENT,\r\n  GET_UNIT_DEPARTMENT,\r\n  SET_ERRORS,\r\n  UPDATE_COURSE,\r\n  UPDATE_DEPARTMENT,\r\n  UPDATE_STUDENT,\r\n  UPDATE_SUBJECT,\r\n  UPDATE_TEACHER,\r\n  UPDATE_UNIT,\r\n  UPDATE_SCORE,\r\n  DELETE_DANGKYMON,\r\n  UPDATE_PASSWORD,\r\n  TEACHER_UPW,\r\n  STUDENT_UPW,\r\n  GET_SUBJECT_DEPARTMENT,\r\n  GET_COURSE_BY_KEHOACHNAM,\r\n  GET_THONGKE_BY_SOMETHING,\r\n  GET_COURSE_BY_SOMETHING,\r\n  GET_ALL_COURSE_BY_MKH,\r\n  GET_ALL_COURSE_BY_UNIMKH,\r\n  GET_COURSEDETAIL_COURSE,\r\n  UPDATE_COURSEDETAIL,\r\n  DELETE_COURSEDETAIL,\r\n  GET_ALL_KHN,\r\n} from \"../actionTypes\";\r\nimport * as api from \"../api\";\r\n//getAll\r\nexport const getAllDepartment = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllDepartment();\r\n    dispatch({ type: GET_ALL_DEPARTMENT, payload: data.retObj[0] });\r\n  } catch (error) {\r\n    console.log(\"Redux Error\", error);\r\n  }\r\n};\r\nexport const getAllTeacher = (redata) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllTeacher(redata);\r\n\r\n    dispatch({ type: GET_ALL_TEACHER, payload: data.retObj[0] });\r\n  } catch (error) {\r\n    console.log(\"Redux Error\", error);\r\n  }\r\n};\r\nexport const getAllUnit = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllUnit();\r\n    dispatch({ type: GET_ALL_UNIT, payload: data.retObj[0] });\r\n  } catch (error) {\r\n    console.log(\"Redux Error\", error);\r\n  }\r\n};\r\n\r\nexport const getAllSubject = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllSubject();\r\n    dispatch({ type: GET_ALL_SUBJECT, payload: data.retObj[0] });\r\n  } catch (error) {\r\n    console.log(\"Redux Error\", error);\r\n  }\r\n};\r\nexport const getAllStudent = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllStudent();\r\n    dispatch({ type: GET_ALL_STUDENT, payload: data.retObj[0] });\r\n  } catch (error) {\r\n    console.log(\"Redux Error\", error);\r\n  }\r\n};\r\nexport const getAllCourse = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllCourse();\r\n    dispatch({ type: GET_ALL_COURSE, payload: data.retObj[0] });\r\n  } catch (error) {\r\n    console.log(\"Redux Error\", error);\r\n  }\r\n};\r\nexport const getAllCourseDetail = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllCourseDetail();\r\n    dispatch({ type: GET_ALL_COURSE_DETAIL, payload: data.retObj[0] });\r\n  } catch (error) {\r\n    console.log(\"Redux Error\", error);\r\n  }\r\n};\r\nexport const getAllKHN = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllKHN();\r\n    dispatch({ type: GET_ALL_KHN, payload: data.retObj[0] });\r\n  } catch (error) {\r\n    console.log(\"Redux Error\", error);\r\n  }\r\n};\r\n// Add\r\nexport const addDepartment = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addDepartment(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Thêm khoa mới thành công!\");\r\n      dispatch({ type: ADD_DEPARTMENT, payload: true });\r\n    } else {\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    if (\r\n      error.response &&\r\n      error.response.data &&\r\n      error.response.data.status === \"error\"\r\n    ) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    } else {\r\n      console.log(\"Unknown error occurred\");\r\n    }\r\n  }\r\n};\r\nexport const addTeacher = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addTeacher(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Thêm giảng viên mới thành công!\");\r\n      dispatch({ type: ADD_TEACHER, payload: true });\r\n    } else {\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    if (\r\n      error.response &&\r\n      error.response.data &&\r\n      error.response.data.status === \"error\"\r\n    ) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    } else {\r\n      console.log(\"Unknown error occurred\");\r\n    }\r\n  }\r\n};\r\nexport const addUnit = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addUnit(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Thêm lớp học mới thành công!\");\r\n      dispatch({ type: ADD_UNIT, payload: true });\r\n    } else {\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    if (\r\n      error.response &&\r\n      error.response.data &&\r\n      error.response.data.status === \"error\"\r\n    ) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    } else {\r\n      console.log(\"Unknown error occurred\");\r\n    }\r\n  }\r\n};\r\nexport const addStudent = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addStudent(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Thêm sinh viên mới thành công!\");\r\n      dispatch({ type: ADD_STUDENT, payload: true });\r\n    } else {\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    if (\r\n      error.response &&\r\n      error.response.data &&\r\n      error.response.data.status === \"error\"\r\n    ) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    } else {\r\n      console.log(\"Unknown error occurred\");\r\n    }\r\n  }\r\n};\r\nexport const addSubject = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addSubject(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Thêm môn học mới thành công!\");\r\n      dispatch({ type: ADD_SUBJECT, payload: true });\r\n    } else {\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    if (\r\n      error.response &&\r\n      error.response.data &&\r\n      error.response.data.status === \"error\"\r\n    ) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    } else {\r\n      console.log(\"Unknown error occurred\");\r\n    }\r\n  }\r\n};\r\nexport const addCourse = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addCourse(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Thêm lớp tín chỉ mới thành công!\");\r\n      dispatch({ type: ADD_COURSE, payload: true });\r\n    } else {\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    if (\r\n      error.response &&\r\n      error.response.data &&\r\n      error.response.data.status === \"error\"\r\n    ) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    } else {\r\n      console.log(\"Unknown error occurred\");\r\n    }\r\n  }\r\n};\r\nexport const addCourseDetail = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addCourseDetail(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Thêm chi tiết lớp tín chỉ mới thành công!\");\r\n      dispatch({ type: ADD_COURSE_DETAIL, payload: true });\r\n    } else {\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    if (\r\n      error.response &&\r\n      error.response.data &&\r\n      error.response.data.status === \"error\"\r\n    ) {\r\n      dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n    } else {\r\n      console.log(\"Unknown error occurred\");\r\n    }\r\n  }\r\n};\r\n\r\n//update\r\n\r\nexport const updateDepartment = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateDepartment(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Chỉnh sửa Khoa thành công!\");\r\n      dispatch({ type: UPDATE_DEPARTMENT, payload: true });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const updateUnit = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateUnit(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Chỉnh sửa lớp học thành công!\");\r\n      dispatch({ type: UPDATE_UNIT, payload: true });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const updateSubject = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateSubject(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Chỉnh sửa môn học thành công!\");\r\n      dispatch({ type: UPDATE_SUBJECT, payload: true });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const updateStudent = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateStudent(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Chỉnh sửa sinh viên thành công!\");\r\n      dispatch({ type: UPDATE_STUDENT, payload: true });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const updateTeacher = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateTeacher(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Chỉnh sửa giảng viên thành công!\");\r\n      dispatch({ type: UPDATE_TEACHER, payload: true });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const updateCourse = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateCourse(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Chỉnh sửa lớp tín chỉ thành công!\");\r\n      dispatch({ type: UPDATE_COURSE, payload: true });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const updateCourseDetail = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateCourseDetail(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Chỉnh sửa chi tiết lớp tín chỉ thành công!\");\r\n      dispatch({ type: UPDATE_COURSEDETAIL, payload: true });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const updateScore = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateScore(formData);\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Chỉnh sửa điểm thành công!\");\r\n      dispatch({ type: UPDATE_SCORE, payload: true });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const updatePassword = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePassword(formData);\r\n\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Đổi mật khẩu thành công!\");\r\n      dispatch({ type: UPDATE_PASSWORD, payload: true });\r\n    } else {\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n      toast.error(\"Đổi mật khẩu không thành công!\");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const teacherUpw = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.teacherUpw(formData);\r\n\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Đối mật khẩu thành công!\");\r\n      dispatch({ type: TEACHER_UPW, payload: true });\r\n    } else {\r\n      console.log(\"vô đây\");\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n      toast.error(\"Đổi mật khẩu méo thành không!\");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const studentUpw = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.studentUpw(formData);\r\n\r\n    if (data.status === \"success\") {\r\n      toast.success(\"Đối mật khẩu thành công!\");\r\n      dispatch({ type: STUDENT_UPW, payload: true });\r\n    } else {\r\n      console.log(\"vô đây\");\r\n      dispatch({ type: SET_ERRORS, payload: data });\r\n      toast.error(\"Đổi mật khẩu méo thành không!\");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n// delete\r\nexport const deleteDepartment = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteDepartment(formData);\r\n    if (data.status === \"success\" && data.retObj.length > 0) {\r\n      toast.success(\"Xóa khoa thành công!\");\r\n      dispatch({ type: DELETE_DEPARTMENT, payload: true });\r\n    } else {\r\n      toast.error(\"Xóa Khoa này không thành không!\");\r\n      dispatch({ type: SET_ERRORS, payload: \"Xóa Khoa không Thành công\" });\r\n    }\r\n  } catch (error) {\r\n    // console.log(\"vô đây nè\");\r\n    dispatch({ type: SET_ERRORS, payload: \"Xóa Khoa không Thành công\" });\r\n  }\r\n};\r\n\r\nexport const deleteUnit = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteUnit(formData);\r\n    if (data.status === \"success\" && data.retObj.length > 0) {\r\n      toast.success(\"Xóa lớp học thành công!\");\r\n      dispatch({ type: DELETE_UNIT, payload: true });\r\n    } else {\r\n      toast.error(\"Xóa Lớp này không thành không!\");\r\n      dispatch({ type: SET_ERRORS, payload: \"Xóa lớp không thành công\" });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const deleteStudent = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteStudent(formData);\r\n    if (data.status === \"success\" && data.retObj.length > 0) {\r\n      toast.success(\"Xóa sinh viên thành công!\");\r\n      dispatch({ type: DELETE_STUDENT, payload: true });\r\n    } else {\r\n      toast.error(\"Xóa sinh viên này không thành không!\");\r\n      dispatch({ type: SET_ERRORS, payload: \"Xóa sinh viên không thành công\" });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: \"Xóa sinh viên không Thành công\" });\r\n  }\r\n};\r\nexport const deleteTeacher = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteTeacher(formData);\r\n    if (data.status === \"success\" && data.retObj.length > 0) {\r\n      toast.success(\"Xóa giảng viên thành công!\");\r\n      dispatch({ type: DELETE_TEACHER, payload: true });\r\n    } else {\r\n      toast.error(\"Xóa giảng viên này không thành không!\");\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: \"Xóa giảng viên không thành công\",\r\n      });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: \"Xóa giảng viên không Thành công\" });\r\n  }\r\n};\r\nexport const deleteCourse = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteCourse(formData);\r\n    if (data.status === \"success\" && data.retObj.length > 0) {\r\n      toast.success(\"Xóa lớp tín chỉ thành công!\");\r\n      dispatch({ type: DELETE_COURSE, payload: true });\r\n    } else {\r\n      toast.error(\"Xóa lớp tín chỉ này không thành không!\");\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: \"Xóa lớp tín chỉ không thành công\",\r\n      });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: \"Xóa lớp tín chỉ không Thành công\" });\r\n  }\r\n};\r\n\r\nexport const deleteCourseDetail = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteCourseDetail(formData);\r\n    if (data.status === \"success\" && data.retObj.length > 0) {\r\n      toast.success(\"Xóa chi tiết lớp tín chỉ thành công!\");\r\n      dispatch({ type: DELETE_COURSEDETAIL, payload: true });\r\n    } else {\r\n      toast.error(\"Xóa chi tiết lớp tín chỉ này không thành không!\");\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: \"Xóa chi tiết lớp tín chỉ không thành công\",\r\n      });\r\n    }\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SET_ERRORS,\r\n      payload: \"Xóa chi tiết lớp tín chỉ không Thành công\",\r\n    });\r\n  }\r\n};\r\nexport const deleteSubject = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteSubject(formData);\r\n    if (data.status === \"success\" && data.retObj.length > 0) {\r\n      toast.success(\"Xóa môn học thành công!\");\r\n      dispatch({ type: DELETE_SUBJECT, payload: true });\r\n    } else {\r\n      toast.error(\"Xóa môn học này không thành không!\");\r\n      dispatch({ type: SET_ERRORS, payload: \"Xóa Môn học không thành công\" });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: \"Xóa Môn học không Thành công\" });\r\n  }\r\n};\r\nexport const deleteDangkymon = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteDangkymon(formData);\r\n    if (data.status === \"success\" && data.retObj.length > 0) {\r\n      toast.success(\"Xóa điểm thành công!\");\r\n      dispatch({ type: DELETE_DANGKYMON, payload: true });\r\n    } else {\r\n      toast.error(\"Xóa điểm không thành công!\");\r\n      dispatch({ type: SET_ERRORS, payload: \"Xóa điểm không thành công\" });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: \"Xóa điểm không Thành công\" });\r\n  }\r\n};\r\n// get...bysomething\r\nexport const getTeacherDepartment = (department, page) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getTeacherDepartment(department, page);\r\n    dispatch({ type: GET_TEACHER_DEPARTMENT, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const getStudentUnit = (unit, page) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getStudentUnit(unit, page);\r\n\r\n    dispatch({ type: GET_STUDENT_UNIT, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const getUnitDepartment = (department) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getUnitDepartment(department);\r\n    dispatch({ type: GET_UNIT_DEPARTMENT, payload: data });\r\n  } catch (error) {\r\n    // console.log(\"error.response.data\", error.response.data);\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const getCourseUnit = (unit) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getCourseUnit(unit);\r\n    dispatch({ type: GET_COURSE_UNIT, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const getScoreCourse = (course) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getScoreCourse(course);\r\n    dispatch({ type: GET_SCORE_COURSE, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const getSubjectDepartment = (department, page) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getSubjectDepartment(department, page);\r\n    dispatch({ type: GET_SUBJECT_DEPARTMENT, payload: data });\r\n  } catch (error) {\r\n    // console.log(\"error.response.data\", error.response.data);\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n//\r\nexport const getAllCoursebyUnitMKH = (requestData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllCoursebyUnitMKH(requestData);\r\n\r\n    dispatch({ type: GET_ALL_COURSE_BY_UNIMKH, payload: data.retObj });\r\n  } catch (error) {\r\n    // console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\nexport const getAllCourseDetailCourse = (course) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllCourseDetailCourse(course);\r\n    dispatch({ type: GET_COURSEDETAIL_COURSE, payload: data.retObj });\r\n  } catch (error) {\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n// getbyid\r\nexport const getStudentById = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getStudentById(id);\r\n    dispatch({ type: GET_STUDENT_BY_ID, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getCoursebyKeHoachNam = (requestData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getCoursebyKeHoachNam(requestData);\r\n\r\n    console.log(\"data\", data);\r\n    dispatch({ type: GET_COURSE_BY_KEHOACHNAM, payload: data.retObj });\r\n  } catch (error) {\r\n    // console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const getThongkebysomething = (requestData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getThongkebysomething(requestData);\r\n\r\n    dispatch({ type: GET_THONGKE_BY_SOMETHING, payload: data.retObj });\r\n  } catch (error) {\r\n    // console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const getAllCoursebysomething = (requestData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllCoursebysomething(requestData);\r\n\r\n    dispatch({ type: GET_COURSE_BY_SOMETHING, payload: data.retObj });\r\n  } catch (error) {\r\n    // console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const getAllCoursebyMKH = (requestData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getAllCoursebyMKH(requestData);\r\n\r\n    dispatch({ type: GET_ALL_COURSE_BY_MKH, payload: data.retObj });\r\n  } catch (error) {\r\n    // console.log(\"vô đây\");\r\n    dispatch({ type: SET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n// export const clearThongkes = () => ({\r\n//   type: \"CLEAR_THONGKES\",\r\n// });\r\n"]},"metadata":{},"sourceType":"module"}