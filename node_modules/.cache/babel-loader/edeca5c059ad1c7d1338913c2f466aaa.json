{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HongOanh\\\\OneDrive\\\\Desktop\\\\College-Erp\\\\client\\\\src\\\\components\\\\admin\\\\createNotice\\\\Body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport EngineeringIcon from \"@mui/icons-material/Engineering\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNotice } from \"../../../redux/actions/adminActions\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Spinner from \"../../../utils/Spinner\";\nimport * as classes from \"../../../utils/styles\";\nimport { CREATE_NOTICE, SET_ERRORS } from \"../../../redux/actionTypes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const store = useSelector(state => state);\n  const departments = useSelector(state => state.admin.allDepartment);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState({});\n  const [value, setValue] = useState({\n    date: \"\",\n    noticeFor: \"\",\n    topic: \"\",\n    content: \"\",\n    from: \"\"\n  });\n  useEffect(() => {\n    if (Object.keys(store.errors).length !== 0) {\n      setError(store.errors);\n      setValue({\n        date: \"\",\n        noticeFor: \"\",\n        topic: \"\",\n        content: \"\",\n        from: \"\"\n      });\n    }\n  }, [store.errors]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError({});\n    setLoading(true);\n    dispatch(createNotice(value));\n  };\n\n  useEffect(() => {\n    if (store.errors || store.admin.noticeCreated) {\n      setLoading(false);\n\n      if (store.admin.noticeCreated) {\n        setValue({\n          date: \"\",\n          noticeFor: \"\",\n          topic: \"\",\n          content: \"\",\n          from: \"\"\n        });\n        dispatch({\n          type: CREATE_NOTICE,\n          payload: false\n        });\n        dispatch({\n          type: SET_ERRORS,\n          payload: {}\n        });\n      }\n    } else {\n      setLoading(true);\n    }\n  }, [store.errors, store.admin.noticeCreated]);\n  useEffect(() => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: {}\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-[0.8] mt-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex text-gray-400 items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(EngineeringIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create Notice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" mr-10 bg-white flex flex-col rounded-xl \",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.adminForm0,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.adminForm1,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.adminForm2l,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.adminForm3,\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: classes.adminLabel,\n                  children: \"Date :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Date\",\n                  required: true,\n                  className: classes.adminInput,\n                  type: \"date\",\n                  value: value.date,\n                  onChange: e => setValue({ ...value,\n                    date: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.adminForm3,\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: classes.adminLabel,\n                  children: \"Topic :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  required: true,\n                  placeholder: \"Topic\",\n                  className: classes.adminInput,\n                  type: \"text\",\n                  value: value.topic,\n                  onChange: e => setValue({ ...value,\n                    topic: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.adminForm3,\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: classes.adminLabel,\n                  children: \"To :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  required: true,\n                  displayEmpty: true,\n                  sx: {\n                    height: 36\n                  },\n                  inputProps: {\n                    \"aria-label\": \"Without label\"\n                  },\n                  value: value.noticeFor,\n                  onChange: e => setValue({ ...value,\n                    noticeFor: e.target.value\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"all\",\n                    children: \"All\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"teacher\",\n                    children: \"Teacher\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"student\",\n                    children: \"Student\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.adminForm3,\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: classes.adminLabel,\n                  children: \"From :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  required: true,\n                  placeholder: \"From\",\n                  className: classes.adminInput,\n                  type: \"text\",\n                  value: value.from,\n                  onChange: e => setValue({ ...value,\n                    from: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.adminForm2r,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.adminForm3,\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: `self-start  ${classes.adminLabel}`,\n                  children: \"Content :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  rows: 10,\n                  cols: 40,\n                  required: true,\n                  placeholder: \"Content....\",\n                  className: classes.adminInput,\n                  value: value.content,\n                  onChange: e => setValue({ ...value,\n                    content: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.adminForm3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.adminFormButton,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.adminFormSubmitButton,\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setValue({\n                  date: \"\",\n                  noticeFor: \"\",\n                  topic: \"\",\n                  content: \"\",\n                  from: \"\"\n                });\n                setError({});\n              },\n              className: classes.adminFormClearButton,\n              type: \"button\",\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.loadingAndError,\n            children: [loading && /*#__PURE__*/_jsxDEV(Spinner, {\n              message: \"Creating Notice\",\n              height: 30,\n              width: 150,\n              color: \"#111111\",\n              messageColor: \"blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), (error.noticeError || error.backendError) && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500\",\n              children: error.noticeError || error.backendError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Body, \"VmQslONcRoJq542qH5L4cb0LFc0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["C:/Users/HongOanh/OneDrive/Desktop/College-Erp/client/src/components/admin/createNotice/Body.js"],"names":["React","useEffect","useState","EngineeringIcon","useDispatch","useSelector","createNotice","Select","MenuItem","Spinner","classes","CREATE_NOTICE","SET_ERRORS","Body","dispatch","store","state","departments","admin","allDepartment","loading","setLoading","error","setError","value","setValue","date","noticeFor","topic","content","from","Object","keys","errors","length","handleSubmit","e","preventDefault","noticeCreated","type","payload","adminForm0","adminForm1","adminForm2l","adminForm3","adminLabel","adminInput","target","height","adminForm2r","adminFormButton","adminFormSubmitButton","adminFormClearButton","loadingAndError","noticeError","backendError"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport EngineeringIcon from \"@mui/icons-material/Engineering\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNotice } from \"../../../redux/actions/adminActions\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Spinner from \"../../../utils/Spinner\";\r\nimport * as classes from \"../../../utils/styles\";\r\nimport { CREATE_NOTICE, SET_ERRORS } from \"../../../redux/actionTypes\";\r\n\r\nconst Body = () => {\r\n  const dispatch = useDispatch();\r\n  const store = useSelector((state) => state);\r\n  const departments = useSelector((state) => state.admin.allDepartment);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState({});\r\n  const [value, setValue] = useState({\r\n    date: \"\",\r\n    noticeFor: \"\",\r\n    topic: \"\",\r\n    content: \"\",\r\n    from: \"\",\r\n  });\r\n  useEffect(() => {\r\n    if (Object.keys(store.errors).length !== 0) {\r\n      setError(store.errors);\r\n      setValue({ date: \"\", noticeFor: \"\", topic: \"\", content: \"\", from: \"\" });\r\n    }\r\n  }, [store.errors]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError({});\r\n    setLoading(true);\r\n    dispatch(createNotice(value));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (store.errors || store.admin.noticeCreated) {\r\n      setLoading(false);\r\n      if (store.admin.noticeCreated) {\r\n        setValue({\r\n          date: \"\",\r\n          noticeFor: \"\",\r\n          topic: \"\",\r\n          content: \"\",\r\n          from: \"\",\r\n        });\r\n        dispatch({ type: CREATE_NOTICE, payload: false });\r\n        dispatch({ type: SET_ERRORS, payload: {} });\r\n      }\r\n    } else {\r\n      setLoading(true);\r\n    }\r\n  }, [store.errors, store.admin.noticeCreated]);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: SET_ERRORS, payload: {} });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex-[0.8] mt-3\">\r\n      <div className=\"space-y-5\">\r\n        <div className=\"flex text-gray-400 items-center space-x-2\">\r\n          <EngineeringIcon />\r\n          <h1>Create Notice</h1>\r\n        </div>\r\n        <div className=\" mr-10 bg-white flex flex-col rounded-xl \">\r\n          <form className={classes.adminForm0} onSubmit={handleSubmit}>\r\n            <div className={classes.adminForm1}>\r\n              <div className={classes.adminForm2l}>\r\n                <div className={classes.adminForm3}>\r\n                  <h1 className={classes.adminLabel}>Date :</h1>\r\n\r\n                  <input\r\n                    placeholder=\"Date\"\r\n                    required\r\n                    className={classes.adminInput}\r\n                    type=\"date\"\r\n                    value={value.date}\r\n                    onChange={(e) =>\r\n                      setValue({ ...value, date: e.target.value })\r\n                    }\r\n                  />\r\n                </div>\r\n\r\n                <div className={classes.adminForm3}>\r\n                  <h1 className={classes.adminLabel}>Topic :</h1>\r\n\r\n                  <input\r\n                    required\r\n                    placeholder=\"Topic\"\r\n                    className={classes.adminInput}\r\n                    type=\"text\"\r\n                    value={value.topic}\r\n                    onChange={(e) =>\r\n                      setValue({ ...value, topic: e.target.value })\r\n                    }\r\n                  />\r\n                </div>\r\n\r\n                <div className={classes.adminForm3}>\r\n                  <h1 className={classes.adminLabel}>To :</h1>\r\n                  <Select\r\n                    required\r\n                    displayEmpty\r\n                    sx={{ height: 36 }}\r\n                    inputProps={{ \"aria-label\": \"Without label\" }}\r\n                    value={value.noticeFor}\r\n                    onChange={(e) =>\r\n                      setValue({ ...value, noticeFor: e.target.value })\r\n                    }\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    <MenuItem value=\"all\">All</MenuItem>\r\n                    <MenuItem value=\"teacher\">Teacher</MenuItem>\r\n                    <MenuItem value=\"student\">Student</MenuItem>\r\n                  </Select>\r\n                </div>\r\n                <div className={classes.adminForm3}>\r\n                  <h1 className={classes.adminLabel}>From :</h1>\r\n\r\n                  <input\r\n                    required\r\n                    placeholder=\"From\"\r\n                    className={classes.adminInput}\r\n                    type=\"text\"\r\n                    value={value.from}\r\n                    onChange={(e) =>\r\n                      setValue({ ...value, from: e.target.value })\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={classes.adminForm2r}>\r\n                <div className={classes.adminForm3}>\r\n                  <h1 className={`self-start  ${classes.adminLabel}`}>\r\n                    Content :\r\n                  </h1>\r\n\r\n                  <textarea\r\n                    rows={10}\r\n                    cols={40}\r\n                    required\r\n                    placeholder=\"Content....\"\r\n                    className={classes.adminInput}\r\n                    value={value.content}\r\n                    onChange={(e) =>\r\n                      setValue({ ...value, content: e.target.value })\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className={classes.adminForm3}></div>\r\n              </div>\r\n            </div>\r\n            <div className={classes.adminFormButton}>\r\n              <button className={classes.adminFormSubmitButton} type=\"submit\">\r\n                Submit\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  setValue({\r\n                    date: \"\",\r\n                    noticeFor: \"\",\r\n                    topic: \"\",\r\n                    content: \"\",\r\n                    from: \"\",\r\n                  });\r\n                  setError({});\r\n                }}\r\n                className={classes.adminFormClearButton}\r\n                type=\"button\"\r\n              >\r\n                Clear\r\n              </button>\r\n            </div>\r\n            <div className={classes.loadingAndError}>\r\n              {loading && (\r\n                <Spinner\r\n                  message=\"Creating Notice\"\r\n                  height={30}\r\n                  width={150}\r\n                  color=\"#111111\"\r\n                  messageColor=\"blue\"\r\n                />\r\n              )}\r\n              {(error.noticeError || error.backendError) && (\r\n                <p className=\"text-red-500\">\r\n                  {error.noticeError || error.backendError}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n"]},"metadata":{},"sourceType":"module"}