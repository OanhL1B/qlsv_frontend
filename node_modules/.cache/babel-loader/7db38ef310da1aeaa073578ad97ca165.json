{"ast":null,"code":"var _jsxFileName = \"D:\\\\PTIT\\\\Ky2Nam4\\\\QLSV\\\\frontend\\\\src\\\\components\\\\admin\\\\thongke\\\\Body.js\";\n// import React from \"react\";\n// import { LineChart, Line, XAxis, YAxis, CartesianGrid, Legend } from \"recharts\";\n// // dữ liệu số 1: là dữ kiệu nạp vô biểu đồ để vẽ được liền\n// const data = [\n//   { name: \"Điểm 0\", ĐIỂM: 2 },\n//   // {name: \"Điểm 0.1\", ĐIỂM: 0}\n//   // .........................\n//   { name: \"Điểm 1\", ĐIỂM: 6 },\n//   { name: \"Điểm 2\", ĐIỂM: 3 },\n//   { name: \"Điểm 3\", ĐIỂM: 8 },\n//   { name: \"Điểm 4\", ĐIỂM: 4 },\n//   { name: \"Điểm 5\", ĐIỂM: 8 },\n//   { name: \"Điểm 6\", ĐIỂM: 8 },\n//   { name: \"Điểm 7\", ĐIỂM: 20 },\n//   { name: \"Điểm 8\", ĐIỂM: 8 },\n//   { name: \"Điểm 9\", ĐIỂM: 3 },\n//   { name: \"Điểm 10\", ĐIỂM: 10 },\n// ];\n// // dữ liệu số 2: là cần loop qua để được thành kiểu dữ liệu đầu tiên.\n// const Body = () => {\n//   return (\n//     <div className=\"flex-[0.8] mt-3 mx-5 item-center\">\n//       <LineChart width={1000} height={450} data={data}>\n//         <CartesianGrid strokeDasharray=\"3 3\" />\n//         <XAxis dataKey=\"name\" />\n//         <YAxis\n//           label={{ value: \"Số lượng điểm\", angle: -90, position: \"insideLeft\" }}\n//         />\n//         <Legend />\n//         <Line type=\"monotone\" dataKey=\"ĐIỂM\" stroke=\"#8884d8\" />\n//       </LineChart>\n//     </div>\n//   );\n// };\n// export default Body;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = axios.create({\n  baseURL: \"http://localhost:9090/\"\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem(\"adminUser\")) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem(\"adminUser\")).retObj.jwt}`;\n  }\n\n  return req;\n});\nconst apiUrl = \"api/admin/search/thong-ke\";\nconst idKeHoachNam = \"c2b42960\";\nconst keySearch = \"3\";\nAPI.get(apiUrl, {\n  params: {\n    idKeHoachNam,\n    keySearch\n  }\n}).then(response => {\n  console.log(response.data);\n}).catch(error => {\n  console.error(error);\n});\n\nconst Body = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["D:/PTIT/Ky2Nam4/QLSV/frontend/src/components/admin/thongke/Body.js"],"names":["React","axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","retObj","jwt","apiUrl","idKeHoachNam","keySearch","get","params","then","response","console","log","data","catch","error","Body"],"mappings":";AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAb,CAAZ;AAEAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,GAAD,IAAS;AACpC,MAAIC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAJ,EAAuC;AACrCF,IAAAA,GAAG,CAACG,OAAJ,CAAYC,aAAZ,GAA6B,UAC3BC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,EAA8CK,MAA9C,CAAqDC,GACtD,EAFD;AAGD;;AACD,SAAOR,GAAP;AACD,CAPD;AASA,MAAMS,MAAM,GAAG,2BAAf;AACA,MAAMC,YAAY,GAAG,UAArB;AACA,MAAMC,SAAS,GAAG,GAAlB;AAEAjB,GAAG,CAACkB,GAAJ,CAAQH,MAAR,EAAgB;AACdI,EAAAA,MAAM,EAAE;AACNH,IAAAA,YADM;AAENC,IAAAA;AAFM;AADM,CAAhB,EAMGG,IANH,CAMSC,QAAD,IAAc;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACD,CARH,EASGC,KATH,CASUC,KAAD,IAAW;AAChBJ,EAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,CAXH;;AAaA,MAAMC,IAAI,GAAG,MAAM;AACjB,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;KAAMA,I;AAIN,eAAeA,IAAf","sourcesContent":["// import React from \"react\";\r\n\r\n// import { LineChart, Line, XAxis, YAxis, CartesianGrid, Legend } from \"recharts\";\r\n\r\n// // dữ liệu số 1: là dữ kiệu nạp vô biểu đồ để vẽ được liền\r\n\r\n// const data = [\r\n//   { name: \"Điểm 0\", ĐIỂM: 2 },\r\n//   // {name: \"Điểm 0.1\", ĐIỂM: 0}\r\n//   // .........................\r\n//   { name: \"Điểm 1\", ĐIỂM: 6 },\r\n//   { name: \"Điểm 2\", ĐIỂM: 3 },\r\n//   { name: \"Điểm 3\", ĐIỂM: 8 },\r\n//   { name: \"Điểm 4\", ĐIỂM: 4 },\r\n//   { name: \"Điểm 5\", ĐIỂM: 8 },\r\n//   { name: \"Điểm 6\", ĐIỂM: 8 },\r\n//   { name: \"Điểm 7\", ĐIỂM: 20 },\r\n//   { name: \"Điểm 8\", ĐIỂM: 8 },\r\n//   { name: \"Điểm 9\", ĐIỂM: 3 },\r\n//   { name: \"Điểm 10\", ĐIỂM: 10 },\r\n// ];\r\n\r\n// // dữ liệu số 2: là cần loop qua để được thành kiểu dữ liệu đầu tiên.\r\n\r\n// const Body = () => {\r\n//   return (\r\n//     <div className=\"flex-[0.8] mt-3 mx-5 item-center\">\r\n//       <LineChart width={1000} height={450} data={data}>\r\n//         <CartesianGrid strokeDasharray=\"3 3\" />\r\n//         <XAxis dataKey=\"name\" />\r\n//         <YAxis\r\n//           label={{ value: \"Số lượng điểm\", angle: -90, position: \"insideLeft\" }}\r\n//         />\r\n//         <Legend />\r\n//         <Line type=\"monotone\" dataKey=\"ĐIỂM\" stroke=\"#8884d8\" />\r\n//       </LineChart>\r\n//     </div>\r\n//   );\r\n// };\r\n// export default Body;\r\n\r\nimport React from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst API = axios.create({ baseURL: \"http://localhost:9090/\" });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem(\"adminUser\")) {\r\n    req.headers.Authorization = `Bearer ${\r\n      JSON.parse(localStorage.getItem(\"adminUser\")).retObj.jwt\r\n    }`;\r\n  }\r\n  return req;\r\n});\r\n\r\nconst apiUrl = \"api/admin/search/thong-ke\";\r\nconst idKeHoachNam = \"c2b42960\";\r\nconst keySearch = \"3\";\r\n\r\nAPI.get(apiUrl, {\r\n  params: {\r\n    idKeHoachNam,\r\n    keySearch,\r\n  },\r\n})\r\n  .then((response) => {\r\n    console.log(response.data);\r\n  })\r\n  .catch((error) => {\r\n    console.error(error);\r\n  });\r\n\r\nconst Body = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default Body;\r\n"]},"metadata":{},"sourceType":"module"}